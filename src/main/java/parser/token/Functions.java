package cn.hotdb.parser.token;

/**
 * 
 * @author liuhuanting
 * @date 2018年11月16日 下午4:45:11
 * 
 */
public abstract class Functions {
    public static final int ABS = 1;
    public static final int ACOS = 2;
    public static final int ADDDATE = 3;
    public static final int ADDTIME = 4;
    public static final int AES_DECRYPT = 5;
    public static final int AES_ENCRYPT = 6;
    public static final int ANY_VALUE = 7;
    public static final int ASCII = 8;
    public static final int ASIN = 9;
    public static final int ASYMMETRIC_DECRYPT = 10;
    public static final int ASYMMETRIC_DERIVE = 11;
    public static final int ASYMMETRIC_ENCRYPT = 12;
    public static final int ASYMMETRIC_SIGN = 13;
    public static final int ASYMMETRIC_VERIFY = 14;
    public static final int ATAN = 15;
    public static final int ATAN2 = 16;
    public static final int AVG = 17;
    public static final int BENCHMARK = 18;
    public static final int BIN = 19;
    public static final int BIN_TO_UUID = 20;
    public static final int BIT_AND = 21;
    public static final int BIT_COUNT = 22;
    public static final int BIT_LENGTH = 23;
    public static final int BIT_OR = 24;
    public static final int BIT_XOR = 25;
    public static final int CAN_ACCESS_COLUMN = 26;
    public static final int CAN_ACCESS_DATABASE = 27;
    public static final int CAN_ACCESS_TABLE = 28;
    public static final int CAN_ACCESS_VIEW = 29;
    public static final int CAST = 30;
    public static final int CEIL = 31;
    public static final int CEILING = 32;
    public static final int CHAR = 33;
    public static final int CHAR_LENGTH = 34;
    public static final int CHARACTER_LENGTH = 35;
    public static final int CHARSET = 36;
    public static final int COALESCE = 37;
    public static final int COERCIBILITY = 38;
    public static final int COLLATION = 39;
    public static final int COMPRESS = 40;
    public static final int CONCAT = 41;
    public static final int CONCAT_WS = 42;
    public static final int CONNECTION_ID = 43;
    public static final int CONV = 44;
    public static final int CONVERT = 45;
    public static final int CONVERT_TZ = 46;
    public static final int COS = 47;
    public static final int COT = 48;
    public static final int COUNT = 49;
    public static final int CRC32 = 50;
    public static final int CREATE_ASYMMETRIC_PRIV_KEY = 51;
    public static final int CREATE_ASYMMETRIC_PUB_KEY = 52;
    public static final int CREATE_DH_PARAMETERS = 53;
    public static final int CREATE_DIGEST = 54;
    public static final int CUME_DIST = 55;
    public static final int CURDATE = 56;
    public static final int CURRENT_DATE = 57;
    public static final int CURRENT_ROLE = 58;
    public static final int CURRENT_TIME = 59;
    public static final int CURRENT_TIMESTAMP = 60;
    public static final int CURRENT_USER = 61;
    public static final int CURTIME = 62;
    public static final int DATABASE = 63;
    public static final int DATE = 64;
    public static final int DATE_ADD = 65;
    public static final int DATE_FORMAT = 66;
    public static final int DATE_SUB = 67;
    public static final int DATEDIFF = 68;
    public static final int DAY = 69;
    public static final int DAYNAME = 70;
    public static final int DAYOFMONTH = 71;
    public static final int DAYOFWEEK = 72;
    public static final int DAYOFYEAR = 73;
    public static final int DECODE = 74;
    public static final int DEFAULT = 75;
    public static final int DEGREES = 76;
    public static final int DENSE_RANK = 77;
    public static final int DES_DECRYPT = 78;
    public static final int DES_ENCRYPT = 79;
    public static final int ELT = 80;
    public static final int ENCODE = 81;
    public static final int ENCRYPT = 82;
    public static final int EXP = 83;
    public static final int EXPORT_SET = 84;
    public static final int EXTRACT = 85;
    public static final int ExtractValue = 86;
    public static final int FIELD = 87;
    public static final int FIND_IN_SET = 88;
    public static final int FIRST_VALUE = 89;
    public static final int FLOOR = 90;
    public static final int FORMAT = 91;
    public static final int FOUND_ROWS = 92;
    public static final int FROM_BASE64 = 93;
    public static final int FROM_DAYS = 94;
    public static final int FROM_UNIXTIME = 95;
    public static final int GeomCollection = 96;
    public static final int GeometryCollection = 97;
    public static final int GET_DD_COLUMN_PRIVILEGES = 98;
    public static final int GET_DD_CREATE_OPTIONS = 99;
    public static final int GET_DD_INDEX_SUB_PART_LENGTH = 100;
    public static final int GET_FORMAT = 101;
    public static final int GET_LOCK = 102;
    public static final int GREATEST = 103;
    public static final int GROUP_CONCAT = 104;
    public static final int GROUPING = 105;
    public static final int GTID_SUBSET = 106;
    public static final int GTID_SUBTRACT = 107;
    public static final int HEX = 108;
    public static final int HOUR = 109;
    public static final int ICU_VERSION = 110;
    public static final int IF = 111;
    public static final int IFNULL = 112;
    public static final int IN = 113;
    public static final int INET_ATON = 114;
    public static final int INET_NTOA = 115;
    public static final int INET6_ATON = 116;
    public static final int INET6_NTOA = 117;
    public static final int INSERT = 118;
    public static final int INSTR = 119;
    public static final int INTERNAL_AUTO_INCREMENT = 120;
    public static final int INTERNAL_AVG_ROW_LENGTH = 121;
    public static final int INTERNAL_CHECK_TIME = 122;
    public static final int INTERNAL_CHECKSUM = 123;
    public static final int INTERNAL_DATA_FREE = 124;
    public static final int INTERNAL_DATA_LENGTH = 125;
    public static final int INTERNAL_DD_CHAR_LENGTH = 126;
    public static final int INTERNAL_GET_COMMENT_OR_ERROR = 127;
    public static final int INTERNAL_GET_VIEW_WARNING_OR_ERROR = 128;
    public static final int INTERNAL_INDEX_COLUMN_CARDINALITY = 129;
    public static final int INTERNAL_INDEX_LENGTH = 130;
    public static final int INTERNAL_KEYS_DISABLED = 131;
    public static final int INTERNAL_MAX_DATA_LENGTH = 132;
    public static final int INTERNAL_TABLE_ROWS = 133;
    public static final int INTERNAL_UPDATE_TIME = 134;
    public static final int INTERVAL = 135;
    public static final int IS_FREE_LOCK = 136;
    public static final int IS_IPV4 = 137;
    public static final int IS_IPV4_COMPAT = 138;
    public static final int IS_IPV4_MAPPED = 139;
    public static final int IS_IPV6 = 140;
    public static final int IS_USED_LOCK = 141;
    public static final int IS_UUID = 142;
    public static final int ISNULL = 143;
    public static final int JSON_ARRAY = 144;
    public static final int JSON_ARRAY_APPEND = 145;
    public static final int JSON_ARRAY_INSERT = 146;
    public static final int JSON_ARRAYAGG = 147;
    public static final int JSON_CONTAINS = 148;
    public static final int JSON_CONTAINS_PATH = 149;
    public static final int JSON_DEPTH = 150;
    public static final int JSON_EXTRACT = 151;
    public static final int JSON_INSERT = 152;
    public static final int JSON_KEYS = 153;
    public static final int JSON_LENGTH = 154;
    public static final int JSON_MERGE = 155;
    public static final int JSON_MERGE_PATCH = 156;
    public static final int JSON_MERGE_PRESERVE = 157;
    public static final int JSON_OBJECT = 158;
    public static final int JSON_OBJECTAGG = 159;
    public static final int JSON_PRETTY = 160;
    public static final int JSON_QUOTE = 161;
    public static final int JSON_REMOVE = 162;
    public static final int JSON_REPLACE = 163;
    public static final int JSON_SEARCH = 164;
    public static final int JSON_SET = 165;
    public static final int JSON_STORAGE_FREE = 166;
    public static final int JSON_STORAGE_SIZE = 167;
    public static final int JSON_TABLE = 168;
    public static final int JSON_TYPE = 169;
    public static final int JSON_UNQUOTE = 170;
    public static final int JSON_VALID = 171;
    public static final int LAG = 172;
    public static final int LAST_INSERT_ID = 173;
    public static final int LAST_VALUE = 174;
    public static final int LCASE = 175;
    public static final int LEAD = 176;
    public static final int LEAST = 177;
    public static final int LEFT = 178;
    public static final int LENGTH = 179;
    public static final int LineString = 180;
    public static final int LN = 181;
    public static final int LOAD_FILE = 182;
    public static final int LOCALTIME = 183;
    public static final int LOCALTIMESTAMP = 184;
    public static final int LOCATE = 185;
    public static final int LOG = 186;
    public static final int LOG10 = 187;
    public static final int LOG2 = 188;
    public static final int LOWER = 189;
    public static final int LPAD = 190;
    public static final int LTRIM = 191;
    public static final int MAKE_SET = 192;
    public static final int MAKEDATE = 193;
    public static final int MAKETIME = 194;
    public static final int MASTER_POS_WAIT = 195;
    public static final int MAX = 196;
    public static final int MBRContains = 197;
    public static final int MBRCoveredBy = 198;
    public static final int MBRCovers = 199;
    public static final int MBRDisjoint = 200;
    public static final int MBREquals = 201;
    public static final int MBRIntersects = 202;
    public static final int MBROverlaps = 203;
    public static final int MBRTouches = 204;
    public static final int MBRWithin = 205;
    public static final int MD5 = 206;
    public static final int MICROSECOND = 207;
    public static final int MID = 208;
    public static final int MIN = 209;
    public static final int MINUTE = 210;
    public static final int MOD = 211;
    public static final int MONTH = 212;
    public static final int MONTHNAME = 213;
    public static final int MultiLineString = 214;
    public static final int MultiPoint = 215;
    public static final int MultiPolygon = 216;
    public static final int NAME_CONST = 217;
    public static final int NOTIN = 218;
    public static final int NOW = 219;
    public static final int NTH_VALUE = 220;
    public static final int NTILE = 221;
    public static final int NULLIF = 222;
    public static final int OCT = 223;
    public static final int OCTET_LENGTH = 224;
    public static final int ORD = 225;
    public static final int PASSWORD = 226;
    public static final int PERCENT_RANK = 227;
    public static final int PERIOD_ADD = 228;
    public static final int PERIOD_DIFF = 229;
    public static final int PI = 230;
    public static final int Point = 231;
    public static final int Polygon = 232;
    public static final int POSITION = 233;
    public static final int POW = 234;
    public static final int POWER = 235;
    public static final int QUARTER = 236;
    public static final int QUOTE = 237;
    public static final int RADIANS = 238;
    public static final int RAND = 239;
    public static final int RANDOM_BYTES = 240;
    public static final int RANK = 241;
    public static final int REGEXP_INSTR = 242;
    public static final int REGEXP_LIKE = 243;
    public static final int REGEXP_REPLACE = 244;
    public static final int REGEXP_SUBSTR = 245;
    public static final int RELEASE_ALL_LOCKS = 246;
    public static final int RELEASE_LOCK = 247;
    public static final int REPEAT = 248;
    public static final int REPLACE = 249;
    public static final int REVERSE = 250;
    public static final int RIGHT = 251;
    public static final int ROLES_GRAPHML = 252;
    public static final int ROUND = 253;
    public static final int ROW_COUNT = 254;
    public static final int ROW_NUMBER = 255;
    public static final int RPAD = 256;
    public static final int RTRIM = 257;
    public static final int SCHEMA = 258;
    public static final int SEC_TO_TIME = 259;
    public static final int SECOND = 260;
    public static final int SESSION_USER = 261;
    public static final int SHA1 = 262;
    public static final int SHA = 263;
    public static final int SHA2 = 264;
    public static final int SIGN = 265;
    public static final int SIN = 266;
    public static final int SLEEP = 267;
    public static final int SOUNDEX = 268;
    public static final int SPACE = 269;
    public static final int SQRT = 270;
    public static final int ST_Area = 271;
    public static final int ST_AsBinary = 272;
    public static final int ST_AsWKB = 273;
    public static final int ST_AsGeoJSON = 274;
    public static final int ST_AsText = 275;
    public static final int ST_AsWKT = 276;
    public static final int ST_Buffer = 277;
    public static final int ST_Buffer_Strategy = 278;
    public static final int ST_Centroid = 279;
    public static final int ST_Contains = 280;
    public static final int ST_ConvexHull = 281;
    public static final int ST_Crosses = 282;
    public static final int ST_Difference = 283;
    public static final int ST_Dimension = 284;
    public static final int ST_Disjoint = 285;
    public static final int ST_Distance = 286;
    public static final int ST_Distance_Sphere = 287;
    public static final int ST_EndPoint = 288;
    public static final int ST_Envelope = 289;
    public static final int ST_Equals = 290;
    public static final int ST_ExteriorRing = 291;
    public static final int ST_GeoHash = 292;
    public static final int ST_GeomCollFromText = 293;
    public static final int ST_GeometryCollectionFromText = 294;
    public static final int ST_GeomCollFromTxt = 295;
    public static final int ST_GeomCollFromWKB = 296;
    public static final int ST_GeometryCollectionFromWKB = 297;
    public static final int ST_GeometryN = 298;
    public static final int ST_GeometryType = 299;
    public static final int ST_GeomFromGeoJSON = 300;
    public static final int ST_GeomFromText = 301;
    public static final int ST_GeometryFromText = 302;
    public static final int ST_GeomFromWKB = 303;
    public static final int ST_GeometryFromWKB = 304;
    public static final int ST_InteriorRingN = 305;
    public static final int ST_Intersection = 306;
    public static final int ST_Intersects = 307;
    public static final int ST_IsClosed = 308;
    public static final int ST_IsEmpty = 309;
    public static final int ST_IsSimple = 310;
    public static final int ST_IsValid = 311;
    public static final int ST_LatFromGeoHash = 312;
    public static final int ST_Latitude = 313;
    public static final int ST_Length = 314;
    public static final int ST_LineFromText = 315;
    public static final int ST_LineStringFromText = 316;
    public static final int ST_LineFromWKB = 317;
    public static final int ST_LineStringFromWKB = 318;
    public static final int ST_LongFromGeoHash = 319;
    public static final int ST_Longitude = 320;
    public static final int ST_MakeEnvelope = 321;
    public static final int ST_MLineFromText = 322;
    public static final int ST_MultiLineStringFromText = 323;
    public static final int ST_MLineFromWKB = 324;
    public static final int ST_MultiLineStringFromWKB = 325;
    public static final int ST_MPointFromText = 326;
    public static final int ST_MultiPointFromText = 327;
    public static final int ST_MPointFromWKB = 328;
    public static final int ST_MultiPointFromWKB = 329;
    public static final int ST_MPolyFromText = 330;
    public static final int ST_MultiPolygonFromText = 331;
    public static final int ST_MPolyFromWKB = 332;
    public static final int ST_MultiPolygonFromWKB = 333;
    public static final int ST_NumGeometries = 334;
    public static final int ST_NumInteriorRing = 335;
    public static final int ST_NumInteriorRings = 336;
    public static final int ST_NumPoints = 337;
    public static final int ST_Overlaps = 338;
    public static final int ST_PointFromGeoHash = 339;
    public static final int ST_PointFromText = 340;
    public static final int ST_PointFromWKB = 341;
    public static final int ST_PointN = 342;
    public static final int ST_PolyFromText = 343;
    public static final int ST_PolygonFromText = 344;
    public static final int ST_PolyFromWKB = 345;
    public static final int ST_PolygonFromWKB = 346;
    public static final int ST_Simplify = 347;
    public static final int ST_SRID = 348;
    public static final int ST_StartPoint = 349;
    public static final int ST_SwapXY = 350;
    public static final int ST_SymDifference = 351;
    public static final int ST_Touches = 352;
    public static final int ST_Transform = 353;
    public static final int ST_Union = 354;
    public static final int ST_Validate = 355;
    public static final int ST_Within = 356;
    public static final int ST_X = 357;
    public static final int ST_Y = 358;
    public static final int STATEMENT_DIGEST = 359;
    public static final int STATEMENT_DIGEST_TEXT = 360;
    public static final int STD = 361;
    public static final int STDDEV = 362;
    public static final int STDDEV_POP = 363;
    public static final int STDDEV_SAMP = 364;
    public static final int STR_TO_DATE = 365;
    public static final int STRCMP = 366;
    public static final int SUBDATE = 367;
    public static final int SUBSTR = 368;
    public static final int SUBSTRING = 369;
    public static final int SUBSTRING_INDEX = 370;
    public static final int SUBTIME = 371;
    public static final int SUM = 372;
    public static final int SYSDATE = 373;
    public static final int SYSTEM_USER = 374;
    public static final int TAN = 375;
    public static final int TIME = 376;
    public static final int TIME_FORMAT = 377;
    public static final int TIME_TO_SEC = 378;
    public static final int TIMEDIFF = 379;
    public static final int TIMESTAMP = 380;
    public static final int TIMESTAMPADD = 381;
    public static final int TIMESTAMPDIFF = 382;
    public static final int TO_BASE64 = 383;
    public static final int TO_DAYS = 384;
    public static final int TO_SECONDS = 385;
    public static final int TRIM = 386;
    public static final int TRUNCATE = 387;
    public static final int UCASE = 388;
    public static final int UNCOMPRESS = 389;
    public static final int UNCOMPRESSED_LENGTH = 390;
    public static final int UNHEX = 391;
    public static final int UNIX_TIMESTAMP = 392;
    public static final int UpdateXML = 393;
    public static final int UPPER = 394;
    public static final int USER = 395;
    public static final int UTC_DATE = 396;
    public static final int UTC_TIME = 397;
    public static final int UTC_TIMESTAMP = 398;
    public static final int UUID = 399;
    public static final int UUID_SHORT = 400;
    public static final int UUID_TO_BIN = 401;
    public static final int VALIDATE_PASSWORD_STRENGTH = 402;
    public static final int VALUES = 403;
    public static final int VAR_POP = 404;
    public static final int VAR_SAMP = 405;
    public static final int VARIANCE = 406;
    public static final int VERSION = 407;
    public static final int WAIT_FOR_EXECUTED_GTID_SET = 408;
    public static final int WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 409;
    public static final int WEEK = 410;
    public static final int WEEKDAY = 411;
    public static final int WEEKOFYEAR = 412;
    public static final int WEIGHT_STRING = 413;
    public static final int YEAR = 414;
    public static final int YEARWEEK = 415;
    public static final int TO_CHAR = 416;
    public static final int TO_DATE = 417;
    public static final int TO_NCHAR = 418;
    public static final int TO_TIMESTAMP = 419;
    public static final int TO_NUMBER = 420;
    public static final int CHR = 421;
    public static final int LENGTHB = 422;
    public static final int ADD_MONTHS = 423;
    public static final int LAST_DAY = 424;
    public static final int NEXT_DAY = 425;
    public static final int MONTHS_BETWEEN = 426;
    public static final int NVL = 427;
    public static final int NVL2 = 428;
    public static final int BITAND = 429;
    public static final int NANVL = 430;
    public static final int REMAINDER = 431;
    public static final int TRUNC = 432;
    public static final int NLS_LOWER = 433;
    public static final int NLS_UPPER = 434;
    public static final int NEW_TIME = 435;
    public static final int SYSTIMESTAMP = 436;
    public static final int TO_TIMESTAMP_TZ = 437;
    public static final int BIN_TO_NUM = 438;
    public static final int HEXTORAW = 439;
    public static final int RAWTOHEX = 440;
    public static final int RAWTONHEX = 441;
    public static final int TO_BINARY_DOUBLE = 442;
    public static final int TO_BINARY_FLOAT = 443;
    public static final int TO_CLOB = 444;
    public static final int TO_NCLOB = 445;
    public static final int TO_LOB = 446;
    public static final int TRANSLATE = 447;
    public static final int SINH = 448;
    public static final int COSH = 449;
    public static final int TANH = 450;
    public static final int WIDTH_BUCKET = 451;
    public static final int INITCAP = 452;
    public static final int NLS_INITCAP = 453;
    public static final int NLSSORT = 454;
    public static final int TREAD = 455;//oracle好像无此函数
    public static final int NLS_CHARSET_DECL_LEN = 456;
    public static final int NLS_CHARSET_ID = 457;
    public static final int NLS_CHARSET_NAME = 458;
    public static final int DBTIMEZONE = 459;
    public static final int FROM_TZ = 460;
    public static final int NUMTODSINTERVAL = 461;
    public static final int NUMTOYMINTERVAL = 462;
    public static final int SESSIONTIMEZONE = 463;
    public static final int SYS_EXTRACT_UTC = 464;
    public static final int TO_DSINTERVAL = 465;
    public static final int TO_YMINTERVAL = 466;
    public static final int TZ_OFFSET = 467;
    public static final int ASCIISTR = 468;
    public static final int CHARTOROWID = 469;
    public static final int COMPOSE = 470;
    public static final int DECOMPOSE = 471;
    public static final int ROWIDTOCHAR = 472;
    public static final int ROWIDTONCHAR = 473;
    public static final int SCN_TO_TIMESTAMP = 474;
    public static final int TIMESTAMP_TO_SCN = 475;
    public static final int TO_MULTI_BYTE = 476;
    public static final int TO_SINGLE_BYTE = 477;
    public static final int UNISTR = 478;
    public static final int DUMP = 479;
    public static final int ORA_HASH = 480;
    public static final int VSIZE = 481;
    public static final int LNNVL = 482;

    public static final String getInfo(int type) {
        return info[type];
    }

    public static final byte[] getBytes(int type) {
        return bytes[type];
    }

    private static final String[] info = new String[512];

    private static final byte[][] bytes = new byte[512][];

    static {
        info[1] = "ABS";
        info[2] = "ACOS";
        info[3] = "ADDDATE";
        info[4] = "ADDTIME";
        info[5] = "AES_DECRYPT";
        info[6] = "AES_ENCRYPT";
        info[7] = "ANY_VALUE";
        info[8] = "ASCII";
        info[9] = "ASIN";
        info[10] = "ASYMMETRIC_DECRYPT";
        info[11] = "ASYMMETRIC_DERIVE";
        info[12] = "ASYMMETRIC_ENCRYPT";
        info[13] = "ASYMMETRIC_SIGN";
        info[14] = "ASYMMETRIC_VERIFY";
        info[15] = "ATAN";
        info[16] = "ATAN2";
        info[17] = "AVG";
        info[18] = "BENCHMARK";
        info[19] = "BIN";
        info[20] = "BIN_TO_UUID";
        info[21] = "BIT_AND";
        info[22] = "BIT_COUNT";
        info[23] = "BIT_LENGTH";
        info[24] = "BIT_OR";
        info[25] = "BIT_XOR";
        info[26] = "CAN_ACCESS_COLUMN";
        info[27] = "CAN_ACCESS_DATABASE";
        info[28] = "CAN_ACCESS_TABLE";
        info[29] = "CAN_ACCESS_VIEW";
        info[30] = "CAST";
        info[31] = "CEIL";
        info[32] = "CEILING";
        info[33] = "CHAR";
        info[34] = "CHAR_LENGTH";
        info[35] = "CHARACTER_LENGTH";
        info[36] = "CHARSET";
        info[37] = "COALESCE";
        info[38] = "COERCIBILITY";
        info[39] = "COLLATION";
        info[40] = "COMPRESS";
        info[41] = "CONCAT";
        info[42] = "CONCAT_WS";
        info[43] = "CONNECTION_ID";
        info[44] = "CONV";
        info[45] = "CONVERT";
        info[46] = "CONVERT_TZ";
        info[47] = "COS";
        info[48] = "COT";
        info[49] = "COUNT";
        info[50] = "CRC32";
        info[51] = "CREATE_ASYMMETRIC_PRIV_KEY";
        info[52] = "CREATE_ASYMMETRIC_PUB_KEY";
        info[53] = "CREATE_DH_PARAMETERS";
        info[54] = "CREATE_DIGEST";
        info[55] = "CUME_DIST";
        info[56] = "CURDATE";
        info[57] = "CURRENT_DATE";
        info[58] = "CURRENT_ROLE";
        info[59] = "CURRENT_TIME";
        info[60] = "CURRENT_TIMESTAMP";
        info[61] = "CURRENT_USER";
        info[62] = "CURTIME";
        info[63] = "DATABASE";
        info[64] = "DATE";
        info[65] = "DATE_ADD";
        info[66] = "DATE_FORMAT";
        info[67] = "DATE_SUB";
        info[68] = "DATEDIFF";
        info[69] = "DAY";
        info[70] = "DAYNAME";
        info[71] = "DAYOFMONTH";
        info[72] = "DAYOFWEEK";
        info[73] = "DAYOFYEAR";
        info[74] = "DECODE";
        info[75] = "DEFAULT";
        info[76] = "DEGREES";
        info[77] = "DENSE_RANK";
        info[78] = "DES_DECRYPT";
        info[79] = "DES_ENCRYPT";
        info[80] = "ELT";
        info[81] = "ENCODE";
        info[82] = "ENCRYPT";
        info[83] = "EXP";
        info[84] = "EXPORT_SET";
        info[85] = "EXTRACT";
        info[86] = "ExtractValue";
        info[87] = "FIELD";
        info[88] = "FIND_IN_SET";
        info[89] = "FIRST_VALUE";
        info[90] = "FLOOR";
        info[91] = "FORMAT";
        info[92] = "FOUND_ROWS";
        info[93] = "FROM_BASE64";
        info[94] = "FROM_DAYS";
        info[95] = "FROM_UNIXTIME";
        info[96] = "GeomCollection";
        info[97] = "GeometryCollection";
        info[98] = "GET_DD_COLUMN_PRIVILEGES";
        info[99] = "GET_DD_CREATE_OPTIONS";
        info[100] = "GET_DD_INDEX_SUB_PART_LENGTH";
        info[101] = "GET_FORMAT";
        info[102] = "GET_LOCK";
        info[103] = "GREATEST";
        info[104] = "GROUP_CONCAT";
        info[105] = "GROUPING";
        info[106] = "GTID_SUBSET";
        info[107] = "GTID_SUBTRACT";
        info[108] = "HEX";
        info[109] = "HOUR";
        info[110] = "ICU_VERSION";
        info[111] = "IF";
        info[112] = "IFNULL";
        info[113] = "IN";
        info[114] = "INET_ATON";
        info[115] = "INET_NTOA";
        info[116] = "INET6_ATON";
        info[117] = "INET6_NTOA";
        info[118] = "INSERT";
        info[119] = "INSTR";
        info[120] = "INTERNAL_AUTO_INCREMENT";
        info[121] = "INTERNAL_AVG_ROW_LENGTH";
        info[122] = "INTERNAL_CHECK_TIME";
        info[123] = "INTERNAL_CHECKSUM";
        info[124] = "INTERNAL_DATA_FREE";
        info[125] = "INTERNAL_DATA_LENGTH";
        info[126] = "INTERNAL_DD_CHAR_LENGTH";
        info[127] = "INTERNAL_GET_COMMENT_OR_ERROR";
        info[128] = "INTERNAL_GET_VIEW_WARNING_OR_ERROR";
        info[129] = "INTERNAL_INDEX_COLUMN_CARDINALITY";
        info[130] = "INTERNAL_INDEX_LENGTH";
        info[131] = "INTERNAL_KEYS_DISABLED";
        info[132] = "INTERNAL_MAX_DATA_LENGTH";
        info[133] = "INTERNAL_TABLE_ROWS";
        info[134] = "INTERNAL_UPDATE_TIME";
        info[135] = "INTERVAL";
        info[136] = "IS_FREE_LOCK";
        info[137] = "IS_IPV4";
        info[138] = "IS_IPV4_COMPAT";
        info[139] = "IS_IPV4_MAPPED";
        info[140] = "IS_IPV6";
        info[141] = "IS_USED_LOCK";
        info[142] = "IS_UUID";
        info[143] = "ISNULL";
        info[144] = "JSON_ARRAY";
        info[145] = "JSON_ARRAY_APPEND";
        info[146] = "JSON_ARRAY_INSERT";
        info[147] = "JSON_ARRAYAGG";
        info[148] = "JSON_CONTAINS";
        info[149] = "JSON_CONTAINS_PATH";
        info[150] = "JSON_DEPTH";
        info[151] = "JSON_EXTRACT";
        info[152] = "JSON_INSERT";
        info[153] = "JSON_KEYS";
        info[154] = "JSON_LENGTH";
        info[155] = "JSON_MERGE";
        info[156] = "JSON_MERGE_PATCH";
        info[157] = "JSON_MERGE_PRESERVE";
        info[158] = "JSON_OBJECT";
        info[159] = "JSON_OBJECTAGG";
        info[160] = "JSON_PRETTY";
        info[161] = "JSON_QUOTE";
        info[162] = "JSON_REMOVE";
        info[163] = "JSON_REPLACE";
        info[164] = "JSON_SEARCH";
        info[165] = "JSON_SET";
        info[166] = "JSON_STORAGE_FREE";
        info[167] = "JSON_STORAGE_SIZE";
        info[168] = "JSON_TABLE";
        info[169] = "JSON_TYPE";
        info[170] = "JSON_UNQUOTE";
        info[171] = "JSON_VALID";
        info[172] = "LAG";
        info[173] = "LAST_INSERT_ID";
        info[174] = "LAST_VALUE";
        info[175] = "LCASE";
        info[176] = "LEAD";
        info[177] = "LEAST";
        info[178] = "LEFT";
        info[179] = "LENGTH";
        info[180] = "LineString";
        info[181] = "LN";
        info[182] = "LOAD_FILE";
        info[183] = "LOCALTIME";
        info[184] = "LOCALTIMESTAMP";
        info[185] = "LOCATE";
        info[186] = "LOG";
        info[187] = "LOG10";
        info[188] = "LOG2";
        info[189] = "LOWER";
        info[190] = "LPAD";
        info[191] = "LTRIM";
        info[192] = "MAKE_SET";
        info[193] = "MAKEDATE";
        info[194] = "MAKETIME";
        info[195] = "MASTER_POS_WAIT";
        info[196] = "MAX";
        info[197] = "MBRContains";
        info[198] = "MBRCoveredBy";
        info[199] = "MBRCovers";
        info[200] = "MBRDisjoint";
        info[201] = "MBREquals";
        info[202] = "MBRIntersects";
        info[203] = "MBROverlaps";
        info[204] = "MBRTouches";
        info[205] = "MBRWithin";
        info[206] = "MD5";
        info[207] = "MICROSECOND";
        info[208] = "MID";
        info[209] = "MIN";
        info[210] = "MINUTE";
        info[211] = "MOD";
        info[212] = "MONTH";
        info[213] = "MONTHNAME";
        info[214] = "MultiLineString";
        info[215] = "MultiPoint";
        info[216] = "MultiPolygon";
        info[217] = "NAME_CONST";
        info[218] = "NOTIN";
        info[219] = "NOW";
        info[220] = "NTH_VALUE";
        info[221] = "NTILE";
        info[222] = "NULLIF";
        info[223] = "OCT";
        info[224] = "OCTET_LENGTH";
        info[225] = "ORD";
        info[226] = "PASSWORD";
        info[227] = "PERCENT_RANK";
        info[228] = "PERIOD_ADD";
        info[229] = "PERIOD_DIFF";
        info[230] = "PI";
        info[231] = "Point";
        info[232] = "Polygon";
        info[233] = "POSITION";
        info[234] = "POW";
        info[235] = "POWER";
        info[236] = "QUARTER";
        info[237] = "QUOTE";
        info[238] = "RADIANS";
        info[239] = "RAND";
        info[240] = "RANDOM_BYTES";
        info[241] = "RANK";
        info[242] = "REGEXP_INSTR";
        info[243] = "REGEXP_LIKE";
        info[244] = "REGEXP_REPLACE";
        info[245] = "REGEXP_SUBSTR";
        info[246] = "RELEASE_ALL_LOCKS";
        info[247] = "RELEASE_LOCK";
        info[248] = "REPEAT";
        info[249] = "REPLACE";
        info[250] = "REVERSE";
        info[251] = "RIGHT";
        info[252] = "ROLES_GRAPHML";
        info[253] = "ROUND";
        info[254] = "ROW_COUNT";
        info[255] = "ROW_NUMBER";
        info[256] = "RPAD";
        info[257] = "RTRIM";
        info[258] = "SCHEMA";
        info[259] = "SEC_TO_TIME";
        info[260] = "SECOND";
        info[261] = "SESSION_USER";
        info[262] = "SHA1";
        info[263] = "SHA";
        info[264] = "SHA2";
        info[265] = "SIGN";
        info[266] = "SIN";
        info[267] = "SLEEP";
        info[268] = "SOUNDEX";
        info[269] = "SPACE";
        info[270] = "SQRT";
        info[271] = "ST_Area";
        info[272] = "ST_AsBinary";
        info[273] = "ST_AsWKB";
        info[274] = "ST_AsGeoJSON";
        info[275] = "ST_AsText";
        info[276] = "ST_AsWKT";
        info[277] = "ST_Buffer";
        info[278] = "ST_Buffer_Strategy";
        info[279] = "ST_Centroid";
        info[280] = "ST_Contains";
        info[281] = "ST_ConvexHull";
        info[282] = "ST_Crosses";
        info[283] = "ST_Difference";
        info[284] = "ST_Dimension";
        info[285] = "ST_Disjoint";
        info[286] = "ST_Distance";
        info[287] = "ST_Distance_Sphere";
        info[288] = "ST_EndPoint";
        info[289] = "ST_Envelope";
        info[290] = "ST_Equals";
        info[291] = "ST_ExteriorRing";
        info[292] = "ST_GeoHash";
        info[293] = "ST_GeomCollFromText";
        info[294] = "ST_GeometryCollectionFromText";
        info[295] = "ST_GeomCollFromTxt";
        info[296] = "ST_GeomCollFromWKB";
        info[297] = "ST_GeometryCollectionFromWKB";
        info[298] = "ST_GeometryN";
        info[299] = "ST_GeometryType";
        info[300] = "ST_GeomFromGeoJSON";
        info[301] = "ST_GeomFromText";
        info[302] = "ST_GeometryFromText";
        info[303] = "ST_GeomFromWKB";
        info[304] = "ST_GeometryFromWKB";
        info[305] = "ST_InteriorRingN";
        info[306] = "ST_Intersection";
        info[307] = "ST_Intersects";
        info[308] = "ST_IsClosed";
        info[309] = "ST_IsEmpty";
        info[310] = "ST_IsSimple";
        info[311] = "ST_IsValid";
        info[312] = "ST_LatFromGeoHash";
        info[313] = "ST_Latitude";
        info[314] = "ST_Length";
        info[315] = "ST_LineFromText";
        info[316] = "ST_LineStringFromText";
        info[317] = "ST_LineFromWKB";
        info[318] = "ST_LineStringFromWKB";
        info[319] = "ST_LongFromGeoHash";
        info[320] = "ST_Longitude";
        info[321] = "ST_MakeEnvelope";
        info[322] = "ST_MLineFromText";
        info[323] = "ST_MultiLineStringFromText";
        info[324] = "ST_MLineFromWKB";
        info[325] = "ST_MultiLineStringFromWKB";
        info[326] = "ST_MPointFromText";
        info[327] = "ST_MultiPointFromText";
        info[328] = "ST_MPointFromWKB";
        info[329] = "ST_MultiPointFromWKB";
        info[330] = "ST_MPolyFromText";
        info[331] = "ST_MultiPolygonFromText";
        info[332] = "ST_MPolyFromWKB";
        info[333] = "ST_MultiPolygonFromWKB";
        info[334] = "ST_NumGeometries";
        info[335] = "ST_NumInteriorRing";
        info[336] = "ST_NumInteriorRings";
        info[337] = "ST_NumPoints";
        info[338] = "ST_Overlaps";
        info[339] = "ST_PointFromGeoHash";
        info[340] = "ST_PointFromText";
        info[341] = "ST_PointFromWKB";
        info[342] = "ST_PointN";
        info[343] = "ST_PolyFromText";
        info[344] = "ST_PolygonFromText";
        info[345] = "ST_PolyFromWKB";
        info[346] = "ST_PolygonFromWKB";
        info[347] = "ST_Simplify";
        info[348] = "ST_SRID";
        info[349] = "ST_StartPoint";
        info[350] = "ST_SwapXY";
        info[351] = "ST_SymDifference";
        info[352] = "ST_Touches";
        info[353] = "ST_Transform";
        info[354] = "ST_Union";
        info[355] = "ST_Validate";
        info[356] = "ST_Within";
        info[357] = "ST_X";
        info[358] = "ST_Y";
        info[359] = "STATEMENT_DIGEST";
        info[360] = "STATEMENT_DIGEST_TEXT";
        info[361] = "STD";
        info[362] = "STDDEV";
        info[363] = "STDDEV_POP";
        info[364] = "STDDEV_SAMP";
        info[365] = "STR_TO_DATE";
        info[366] = "STRCMP";
        info[367] = "SUBDATE";
        info[368] = "SUBSTR";
        info[369] = "SUBSTRING";
        info[370] = "SUBSTRING_INDEX";
        info[371] = "SUBTIME";
        info[372] = "SUM";
        info[373] = "SYSDATE";
        info[374] = "SYSTEM_USER";
        info[375] = "TAN";
        info[376] = "TIME";
        info[377] = "TIME_FORMAT";
        info[378] = "TIME_TO_SEC";
        info[379] = "TIMEDIFF";
        info[380] = "TIMESTAMP";
        info[381] = "TIMESTAMPADD";
        info[382] = "TIMESTAMPDIFF";
        info[383] = "TO_BASE64";
        info[384] = "TO_DAYS";
        info[385] = "TO_SECONDS";
        info[386] = "TRIM";
        info[387] = "TRUNCATE";
        info[388] = "UCASE";
        info[389] = "UNCOMPRESS";
        info[390] = "UNCOMPRESSED_LENGTH";
        info[391] = "UNHEX";
        info[392] = "UNIX_TIMESTAMP";
        info[393] = "UpdateXML";
        info[394] = "UPPER";
        info[395] = "USER";
        info[396] = "UTC_DATE";
        info[397] = "UTC_TIME";
        info[398] = "UTC_TIMESTAMP";
        info[399] = "UUID";
        info[400] = "UUID_SHORT";
        info[401] = "UUID_TO_BIN";
        info[402] = "VALIDATE_PASSWORD_STRENGTH";
        info[403] = "VALUES";
        info[404] = "VAR_POP";
        info[405] = "VAR_SAMP";
        info[406] = "VARIANCE";
        info[407] = "VERSION";
        info[408] = "WAIT_FOR_EXECUTED_GTID_SET";
        info[409] = "WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS";
        info[410] = "WEEK";
        info[411] = "WEEKDAY";
        info[412] = "WEEKOFYEAR";
        info[413] = "WEIGHT_STRING";
        info[414] = "YEAR";
        info[415] = "YEARWEEK";
        info[416] = "TO_CHAR";
        info[417] = "TO_DATE";
        info[418] = "TO_NCHAR";
        info[419] = "TO_TIMESTAMP";
        info[420] = "TO_NUMBER";
        info[421] = "CHR";
        info[422] = "LENGTHB";
        info[423] = "ADD_MONTHS";
        info[424] = "LAST_DAY";
        info[425] = "NEXT_DAY";
        info[426] = "MONTHS_BETWEEN";
        info[427] = "NVL";
        info[428] = "NVL2";
        info[429] = "BITAND";
        info[430] = "NANVL";
        info[431] = "REMAINDER";
        info[432] = "TRUNC";
        info[433] = "NLS_LOWER";
        info[434] = "NLS_UPPER";
        info[435] = "NEW_TIME";
        info[436] = "SYSTIMESTAMP";
        info[437] = "TO_TIMESTAMP_TZ";
        info[438] = "BIN_TO_NUM";
        info[439] = "HEXTORAW";
        info[440] = "RAWTOHEX";
        info[441] = "RAWTONHEX";
        info[442] = "TO_BINARY_DOUBLE";
        info[443] = "TO_BINARY_FLOAT";
        info[444] = "TO_CLOB";
        info[445] = "TO_NCLOB";
        info[446] = "TO_LOB";
        info[447] = "TRANSLATE";
        info[448] = "SINH";
        info[449] = "COSH";
        info[450] = "TANH";
        info[451] = "WIDTH_BUCKET";
        info[452] = "INITCAP";
        info[453] = "NLS_INITCAP";
        info[454] = "NLSSORT";
        info[455] = "TREAD";
        info[456] = "NLS_CHARSET_DECL_LEN";
        info[457] = "NLS_CHARSET_ID";
        info[458] = "NLS_CHARSET_NAME";
        info[459] = "DBTIMEZONE";
        info[460] = "FROM_TZ";
        info[461] = "NUMTODSINTERVAL";
        info[462] = "NUMTOYMINTERVAL";
        info[463] = "SESSIONTIMEZONE";
        info[464] = "SYS_EXTRACT_UTC";
        info[465] = "TO_DSINTERVAL";
        info[466] = "TO_YMINTERVAL";
        info[467] = "TZ_OFFSET";
        info[468] = "ASCIISTR";
        info[469] = "CHARTOROWID";
        info[470] = "COMPOSE";
        info[471] = "DECOMPOSE";
        info[472] = "ROWIDTOCHAR";
        info[473] = "ROWIDTONCHAR";
        info[474] = "SCN_TO_TIMESTAMP";
        info[475] = "TIMESTAMP_TO_SCN";
        info[476] = "TO_MULTI_BYTE";
        info[477] = "TO_SINGLE_BYTE";
        info[478] = "UNISTR";
        info[479] = "DUMP";
        info[480] = "ORA_HASH";
        info[481] = "VSIZE";
        info[482] = "LNNVL";

        bytes[1] = "ABS".getBytes();
        bytes[2] = "ACOS".getBytes();
        bytes[3] = "ADDDATE".getBytes();
        bytes[4] = "ADDTIME".getBytes();
        bytes[5] = "AES_DECRYPT".getBytes();
        bytes[6] = "AES_ENCRYPT".getBytes();
        bytes[7] = "ANY_VALUE".getBytes();
        bytes[8] = "ASCII".getBytes();
        bytes[9] = "ASIN".getBytes();
        bytes[10] = "ASYMMETRIC_DECRYPT".getBytes();
        bytes[11] = "ASYMMETRIC_DERIVE".getBytes();
        bytes[12] = "ASYMMETRIC_ENCRYPT".getBytes();
        bytes[13] = "ASYMMETRIC_SIGN".getBytes();
        bytes[14] = "ASYMMETRIC_VERIFY".getBytes();
        bytes[15] = "ATAN".getBytes();
        bytes[16] = "ATAN2".getBytes();
        bytes[17] = "AVG".getBytes();
        bytes[18] = "BENCHMARK".getBytes();
        bytes[19] = "BIN".getBytes();
        bytes[20] = "BIN_TO_UUID".getBytes();
        bytes[21] = "BIT_AND".getBytes();
        bytes[22] = "BIT_COUNT".getBytes();
        bytes[23] = "BIT_LENGTH".getBytes();
        bytes[24] = "BIT_OR".getBytes();
        bytes[25] = "BIT_XOR".getBytes();
        bytes[26] = "CAN_ACCESS_COLUMN".getBytes();
        bytes[27] = "CAN_ACCESS_DATABASE".getBytes();
        bytes[28] = "CAN_ACCESS_TABLE".getBytes();
        bytes[29] = "CAN_ACCESS_VIEW".getBytes();
        bytes[30] = "CAST".getBytes();
        bytes[31] = "CEIL".getBytes();
        bytes[32] = "CEILING".getBytes();
        bytes[33] = "CHAR".getBytes();
        bytes[34] = "CHAR_LENGTH".getBytes();
        bytes[35] = "CHARACTER_LENGTH".getBytes();
        bytes[36] = "CHARSET".getBytes();
        bytes[37] = "COALESCE".getBytes();
        bytes[38] = "COERCIBILITY".getBytes();
        bytes[39] = "COLLATION".getBytes();
        bytes[40] = "COMPRESS".getBytes();
        bytes[41] = "CONCAT".getBytes();
        bytes[42] = "CONCAT_WS".getBytes();
        bytes[43] = "CONNECTION_ID".getBytes();
        bytes[44] = "CONV".getBytes();
        bytes[45] = "CONVERT".getBytes();
        bytes[46] = "CONVERT_TZ".getBytes();
        bytes[47] = "COS".getBytes();
        bytes[48] = "COT".getBytes();
        bytes[49] = "COUNT".getBytes();
        bytes[50] = "CRC32".getBytes();
        bytes[51] = "CREATE_ASYMMETRIC_PRIV_KEY".getBytes();
        bytes[52] = "CREATE_ASYMMETRIC_PUB_KEY".getBytes();
        bytes[53] = "CREATE_DH_PARAMETERS".getBytes();
        bytes[54] = "CREATE_DIGEST".getBytes();
        bytes[55] = "CUME_DIST".getBytes();
        bytes[56] = "CURDATE".getBytes();
        bytes[57] = "CURRENT_DATE".getBytes();
        bytes[58] = "CURRENT_ROLE".getBytes();
        bytes[59] = "CURRENT_TIME".getBytes();
        bytes[60] = "CURRENT_TIMESTAMP".getBytes();
        bytes[61] = "CURRENT_USER".getBytes();
        bytes[62] = "CURTIME".getBytes();
        bytes[63] = "DATABASE".getBytes();
        bytes[64] = "DATE".getBytes();
        bytes[65] = "DATE_ADD".getBytes();
        bytes[66] = "DATE_FORMAT".getBytes();
        bytes[67] = "DATE_SUB".getBytes();
        bytes[68] = "DATEDIFF".getBytes();
        bytes[69] = "DAY".getBytes();
        bytes[70] = "DAYNAME".getBytes();
        bytes[71] = "DAYOFMONTH".getBytes();
        bytes[72] = "DAYOFWEEK".getBytes();
        bytes[73] = "DAYOFYEAR".getBytes();
        bytes[74] = "DECODE".getBytes();
        bytes[75] = "DEFAULT".getBytes();
        bytes[76] = "DEGREES".getBytes();
        bytes[77] = "DENSE_RANK".getBytes();
        bytes[78] = "DES_DECRYPT".getBytes();
        bytes[79] = "DES_ENCRYPT".getBytes();
        bytes[80] = "ELT".getBytes();
        bytes[81] = "ENCODE".getBytes();
        bytes[82] = "ENCRYPT".getBytes();
        bytes[83] = "EXP".getBytes();
        bytes[84] = "EXPORT_SET".getBytes();
        bytes[85] = "EXTRACT".getBytes();
        bytes[86] = "ExtractValue".getBytes();
        bytes[87] = "FIELD".getBytes();
        bytes[88] = "FIND_IN_SET".getBytes();
        bytes[89] = "FIRST_VALUE".getBytes();
        bytes[90] = "FLOOR".getBytes();
        bytes[91] = "FORMAT".getBytes();
        bytes[92] = "FOUND_ROWS".getBytes();
        bytes[93] = "FROM_BASE64".getBytes();
        bytes[94] = "FROM_DAYS".getBytes();
        bytes[95] = "FROM_UNIXTIME".getBytes();
        bytes[96] = "GeomCollection".getBytes();
        bytes[97] = "GeometryCollection".getBytes();
        bytes[98] = "GET_DD_COLUMN_PRIVILEGES".getBytes();
        bytes[99] = "GET_DD_CREATE_OPTIONS".getBytes();
        bytes[100] = "GET_DD_INDEX_SUB_PART_LENGTH".getBytes();
        bytes[101] = "GET_FORMAT".getBytes();
        bytes[102] = "GET_LOCK".getBytes();
        bytes[103] = "GREATEST".getBytes();
        bytes[104] = "GROUP_CONCAT".getBytes();
        bytes[105] = "GROUPING".getBytes();
        bytes[106] = "GTID_SUBSET".getBytes();
        bytes[107] = "GTID_SUBTRACT".getBytes();
        bytes[108] = "HEX".getBytes();
        bytes[109] = "HOUR".getBytes();
        bytes[110] = "ICU_VERSION".getBytes();
        bytes[111] = "IF".getBytes();
        bytes[112] = "IFNULL".getBytes();
        bytes[113] = "IN".getBytes();
        bytes[114] = "INET_ATON".getBytes();
        bytes[115] = "INET_NTOA".getBytes();
        bytes[116] = "INET6_ATON".getBytes();
        bytes[117] = "INET6_NTOA".getBytes();
        bytes[118] = "INSERT".getBytes();
        bytes[119] = "INSTR".getBytes();
        bytes[120] = "INTERNAL_AUTO_INCREMENT".getBytes();
        bytes[121] = "INTERNAL_AVG_ROW_LENGTH".getBytes();
        bytes[122] = "INTERNAL_CHECK_TIME".getBytes();
        bytes[123] = "INTERNAL_CHECKSUM".getBytes();
        bytes[124] = "INTERNAL_DATA_FREE".getBytes();
        bytes[125] = "INTERNAL_DATA_LENGTH".getBytes();
        bytes[126] = "INTERNAL_DD_CHAR_LENGTH".getBytes();
        bytes[127] = "INTERNAL_GET_COMMENT_OR_ERROR".getBytes();
        bytes[128] = "INTERNAL_GET_VIEW_WARNING_OR_ERROR".getBytes();
        bytes[129] = "INTERNAL_INDEX_COLUMN_CARDINALITY".getBytes();
        bytes[130] = "INTERNAL_INDEX_LENGTH".getBytes();
        bytes[131] = "INTERNAL_KEYS_DISABLED".getBytes();
        bytes[132] = "INTERNAL_MAX_DATA_LENGTH".getBytes();
        bytes[133] = "INTERNAL_TABLE_ROWS".getBytes();
        bytes[134] = "INTERNAL_UPDATE_TIME".getBytes();
        bytes[135] = "INTERVAL".getBytes();
        bytes[136] = "IS_FREE_LOCK".getBytes();
        bytes[137] = "IS_IPV4".getBytes();
        bytes[138] = "IS_IPV4_COMPAT".getBytes();
        bytes[139] = "IS_IPV4_MAPPED".getBytes();
        bytes[140] = "IS_IPV6".getBytes();
        bytes[141] = "IS_USED_LOCK".getBytes();
        bytes[142] = "IS_UUID".getBytes();
        bytes[143] = "ISNULL".getBytes();
        bytes[144] = "JSON_ARRAY".getBytes();
        bytes[145] = "JSON_ARRAY_APPEND".getBytes();
        bytes[146] = "JSON_ARRAY_INSERT".getBytes();
        bytes[147] = "JSON_ARRAYAGG".getBytes();
        bytes[148] = "JSON_CONTAINS".getBytes();
        bytes[149] = "JSON_CONTAINS_PATH".getBytes();
        bytes[150] = "JSON_DEPTH".getBytes();
        bytes[151] = "JSON_EXTRACT".getBytes();
        bytes[152] = "JSON_INSERT".getBytes();
        bytes[153] = "JSON_KEYS".getBytes();
        bytes[154] = "JSON_LENGTH".getBytes();
        bytes[155] = "JSON_MERGE".getBytes();
        bytes[156] = "JSON_MERGE_PATCH".getBytes();
        bytes[157] = "JSON_MERGE_PRESERVE".getBytes();
        bytes[158] = "JSON_OBJECT".getBytes();
        bytes[159] = "JSON_OBJECTAGG".getBytes();
        bytes[160] = "JSON_PRETTY".getBytes();
        bytes[161] = "JSON_QUOTE".getBytes();
        bytes[162] = "JSON_REMOVE".getBytes();
        bytes[163] = "JSON_REPLACE".getBytes();
        bytes[164] = "JSON_SEARCH".getBytes();
        bytes[165] = "JSON_SET".getBytes();
        bytes[166] = "JSON_STORAGE_FREE".getBytes();
        bytes[167] = "JSON_STORAGE_SIZE".getBytes();
        bytes[168] = "JSON_TABLE".getBytes();
        bytes[169] = "JSON_TYPE".getBytes();
        bytes[170] = "JSON_UNQUOTE".getBytes();
        bytes[171] = "JSON_VALID".getBytes();
        bytes[172] = "LAG".getBytes();
        bytes[173] = "LAST_INSERT_ID".getBytes();
        bytes[174] = "LAST_VALUE".getBytes();
        bytes[175] = "LCASE".getBytes();
        bytes[176] = "LEAD".getBytes();
        bytes[177] = "LEAST".getBytes();
        bytes[178] = "LEFT".getBytes();
        bytes[179] = "LENGTH".getBytes();
        bytes[180] = "LineString".getBytes();
        bytes[181] = "LN".getBytes();
        bytes[182] = "LOAD_FILE".getBytes();
        bytes[183] = "LOCALTIME".getBytes();
        bytes[184] = "LOCALTIMESTAMP".getBytes();
        bytes[185] = "LOCATE".getBytes();
        bytes[186] = "LOG".getBytes();
        bytes[187] = "LOG10".getBytes();
        bytes[188] = "LOG2".getBytes();
        bytes[189] = "LOWER".getBytes();
        bytes[190] = "LPAD".getBytes();
        bytes[191] = "LTRIM".getBytes();
        bytes[192] = "MAKE_SET".getBytes();
        bytes[193] = "MAKEDATE".getBytes();
        bytes[194] = "MAKETIME".getBytes();
        bytes[195] = "MASTER_POS_WAIT".getBytes();
        bytes[196] = "MAX".getBytes();
        bytes[197] = "MBRContains".getBytes();
        bytes[198] = "MBRCoveredBy".getBytes();
        bytes[199] = "MBRCovers".getBytes();
        bytes[200] = "MBRDisjoint".getBytes();
        bytes[201] = "MBREquals".getBytes();
        bytes[202] = "MBRIntersects".getBytes();
        bytes[203] = "MBROverlaps".getBytes();
        bytes[204] = "MBRTouches".getBytes();
        bytes[205] = "MBRWithin".getBytes();
        bytes[206] = "MD5".getBytes();
        bytes[207] = "MICROSECOND".getBytes();
        bytes[208] = "MID".getBytes();
        bytes[209] = "MIN".getBytes();
        bytes[210] = "MINUTE".getBytes();
        bytes[211] = "MOD".getBytes();
        bytes[212] = "MONTH".getBytes();
        bytes[213] = "MONTHNAME".getBytes();
        bytes[214] = "MultiLineString".getBytes();
        bytes[215] = "MultiPoint".getBytes();
        bytes[216] = "MultiPolygon".getBytes();
        bytes[217] = "NAME_CONST".getBytes();
        bytes[218] = "NOTIN".getBytes();
        bytes[219] = "NOW".getBytes();
        bytes[220] = "NTH_VALUE".getBytes();
        bytes[221] = "NTILE".getBytes();
        bytes[222] = "NULLIF".getBytes();
        bytes[223] = "OCT".getBytes();
        bytes[224] = "OCTET_LENGTH".getBytes();
        bytes[225] = "ORD".getBytes();
        bytes[226] = "PASSWORD".getBytes();
        bytes[227] = "PERCENT_RANK".getBytes();
        bytes[228] = "PERIOD_ADD".getBytes();
        bytes[229] = "PERIOD_DIFF".getBytes();
        bytes[230] = "PI".getBytes();
        bytes[231] = "Point".getBytes();
        bytes[232] = "Polygon".getBytes();
        bytes[233] = "POSITION".getBytes();
        bytes[234] = "POW".getBytes();
        bytes[235] = "POWER".getBytes();
        bytes[236] = "QUARTER".getBytes();
        bytes[237] = "QUOTE".getBytes();
        bytes[238] = "RADIANS".getBytes();
        bytes[239] = "RAND".getBytes();
        bytes[240] = "RANDOM_BYTES".getBytes();
        bytes[241] = "RANK".getBytes();
        bytes[242] = "REGEXP_INSTR".getBytes();
        bytes[243] = "REGEXP_LIKE".getBytes();
        bytes[244] = "REGEXP_REPLACE".getBytes();
        bytes[245] = "REGEXP_SUBSTR".getBytes();
        bytes[246] = "RELEASE_ALL_LOCKS".getBytes();
        bytes[247] = "RELEASE_LOCK".getBytes();
        bytes[248] = "REPEAT".getBytes();
        bytes[249] = "REPLACE".getBytes();
        bytes[250] = "REVERSE".getBytes();
        bytes[251] = "RIGHT".getBytes();
        bytes[252] = "ROLES_GRAPHML".getBytes();
        bytes[253] = "ROUND".getBytes();
        bytes[254] = "ROW_COUNT".getBytes();
        bytes[255] = "ROW_NUMBER".getBytes();
        bytes[256] = "RPAD".getBytes();
        bytes[257] = "RTRIM".getBytes();
        bytes[258] = "SCHEMA".getBytes();
        bytes[259] = "SEC_TO_TIME".getBytes();
        bytes[260] = "SECOND".getBytes();
        bytes[261] = "SESSION_USER".getBytes();
        bytes[262] = "SHA1".getBytes();
        bytes[263] = "SHA".getBytes();
        bytes[264] = "SHA2".getBytes();
        bytes[265] = "SIGN".getBytes();
        bytes[266] = "SIN".getBytes();
        bytes[267] = "SLEEP".getBytes();
        bytes[268] = "SOUNDEX".getBytes();
        bytes[269] = "SPACE".getBytes();
        bytes[270] = "SQRT".getBytes();
        bytes[271] = "ST_Area".getBytes();
        bytes[272] = "ST_AsBinary".getBytes();
        bytes[273] = "ST_AsWKB".getBytes();
        bytes[274] = "ST_AsGeoJSON".getBytes();
        bytes[275] = "ST_AsText".getBytes();
        bytes[276] = "ST_AsWKT".getBytes();
        bytes[277] = "ST_Buffer".getBytes();
        bytes[278] = "ST_Buffer_Strategy".getBytes();
        bytes[279] = "ST_Centroid".getBytes();
        bytes[280] = "ST_Contains".getBytes();
        bytes[281] = "ST_ConvexHull".getBytes();
        bytes[282] = "ST_Crosses".getBytes();
        bytes[283] = "ST_Difference".getBytes();
        bytes[284] = "ST_Dimension".getBytes();
        bytes[285] = "ST_Disjoint".getBytes();
        bytes[286] = "ST_Distance".getBytes();
        bytes[287] = "ST_Distance_Sphere".getBytes();
        bytes[288] = "ST_EndPoint".getBytes();
        bytes[289] = "ST_Envelope".getBytes();
        bytes[290] = "ST_Equals".getBytes();
        bytes[291] = "ST_ExteriorRing".getBytes();
        bytes[292] = "ST_GeoHash".getBytes();
        bytes[293] = "ST_GeomCollFromText".getBytes();
        bytes[294] = "ST_GeometryCollectionFromText".getBytes();
        bytes[295] = "ST_GeomCollFromTxt".getBytes();
        bytes[296] = "ST_GeomCollFromWKB".getBytes();
        bytes[297] = "ST_GeometryCollectionFromWKB".getBytes();
        bytes[298] = "ST_GeometryN".getBytes();
        bytes[299] = "ST_GeometryType".getBytes();
        bytes[300] = "ST_GeomFromGeoJSON".getBytes();
        bytes[301] = "ST_GeomFromText".getBytes();
        bytes[302] = "ST_GeometryFromText".getBytes();
        bytes[303] = "ST_GeomFromWKB".getBytes();
        bytes[304] = "ST_GeometryFromWKB".getBytes();
        bytes[305] = "ST_InteriorRingN".getBytes();
        bytes[306] = "ST_Intersection".getBytes();
        bytes[307] = "ST_Intersects".getBytes();
        bytes[308] = "ST_IsClosed".getBytes();
        bytes[309] = "ST_IsEmpty".getBytes();
        bytes[310] = "ST_IsSimple".getBytes();
        bytes[311] = "ST_IsValid".getBytes();
        bytes[312] = "ST_LatFromGeoHash".getBytes();
        bytes[313] = "ST_Latitude".getBytes();
        bytes[314] = "ST_Length".getBytes();
        bytes[315] = "ST_LineFromText".getBytes();
        bytes[316] = "ST_LineStringFromText".getBytes();
        bytes[317] = "ST_LineFromWKB".getBytes();
        bytes[318] = "ST_LineStringFromWKB".getBytes();
        bytes[319] = "ST_LongFromGeoHash".getBytes();
        bytes[320] = "ST_Longitude".getBytes();
        bytes[321] = "ST_MakeEnvelope".getBytes();
        bytes[322] = "ST_MLineFromText".getBytes();
        bytes[323] = "ST_MultiLineStringFromText".getBytes();
        bytes[324] = "ST_MLineFromWKB".getBytes();
        bytes[325] = "ST_MultiLineStringFromWKB".getBytes();
        bytes[326] = "ST_MPointFromText".getBytes();
        bytes[327] = "ST_MultiPointFromText".getBytes();
        bytes[328] = "ST_MPointFromWKB".getBytes();
        bytes[329] = "ST_MultiPointFromWKB".getBytes();
        bytes[330] = "ST_MPolyFromText".getBytes();
        bytes[331] = "ST_MultiPolygonFromText".getBytes();
        bytes[332] = "ST_MPolyFromWKB".getBytes();
        bytes[333] = "ST_MultiPolygonFromWKB".getBytes();
        bytes[334] = "ST_NumGeometries".getBytes();
        bytes[335] = "ST_NumInteriorRing".getBytes();
        bytes[336] = "ST_NumInteriorRings".getBytes();
        bytes[337] = "ST_NumPoints".getBytes();
        bytes[338] = "ST_Overlaps".getBytes();
        bytes[339] = "ST_PointFromGeoHash".getBytes();
        bytes[340] = "ST_PointFromText".getBytes();
        bytes[341] = "ST_PointFromWKB".getBytes();
        bytes[342] = "ST_PointN".getBytes();
        bytes[343] = "ST_PolyFromText".getBytes();
        bytes[344] = "ST_PolygonFromText".getBytes();
        bytes[345] = "ST_PolyFromWKB".getBytes();
        bytes[346] = "ST_PolygonFromWKB".getBytes();
        bytes[347] = "ST_Simplify".getBytes();
        bytes[348] = "ST_SRID".getBytes();
        bytes[349] = "ST_StartPoint".getBytes();
        bytes[350] = "ST_SwapXY".getBytes();
        bytes[351] = "ST_SymDifference".getBytes();
        bytes[352] = "ST_Touches".getBytes();
        bytes[353] = "ST_Transform".getBytes();
        bytes[354] = "ST_Union".getBytes();
        bytes[355] = "ST_Validate".getBytes();
        bytes[356] = "ST_Within".getBytes();
        bytes[357] = "ST_X".getBytes();
        bytes[358] = "ST_Y".getBytes();
        bytes[359] = "STATEMENT_DIGEST".getBytes();
        bytes[360] = "STATEMENT_DIGEST_TEXT".getBytes();
        bytes[361] = "STD".getBytes();
        bytes[362] = "STDDEV".getBytes();
        bytes[363] = "STDDEV_POP".getBytes();
        bytes[364] = "STDDEV_SAMP".getBytes();
        bytes[365] = "STR_TO_DATE".getBytes();
        bytes[366] = "STRCMP".getBytes();
        bytes[367] = "SUBDATE".getBytes();
        bytes[368] = "SUBSTR".getBytes();
        bytes[369] = "SUBSTRING".getBytes();
        bytes[370] = "SUBSTRING_INDEX".getBytes();
        bytes[371] = "SUBTIME".getBytes();
        bytes[372] = "SUM".getBytes();
        bytes[373] = "SYSDATE".getBytes();
        bytes[374] = "SYSTEM_USER".getBytes();
        bytes[375] = "TAN".getBytes();
        bytes[376] = "TIME".getBytes();
        bytes[377] = "TIME_FORMAT".getBytes();
        bytes[378] = "TIME_TO_SEC".getBytes();
        bytes[379] = "TIMEDIFF".getBytes();
        bytes[380] = "TIMESTAMP".getBytes();
        bytes[381] = "TIMESTAMPADD".getBytes();
        bytes[382] = "TIMESTAMPDIFF".getBytes();
        bytes[383] = "TO_BASE64".getBytes();
        bytes[384] = "TO_DAYS".getBytes();
        bytes[385] = "TO_SECONDS".getBytes();
        bytes[386] = "TRIM".getBytes();
        bytes[387] = "TRUNCATE".getBytes();
        bytes[388] = "UCASE".getBytes();
        bytes[389] = "UNCOMPRESS".getBytes();
        bytes[390] = "UNCOMPRESSED_LENGTH".getBytes();
        bytes[391] = "UNHEX".getBytes();
        bytes[392] = "UNIX_TIMESTAMP".getBytes();
        bytes[393] = "UpdateXML".getBytes();
        bytes[394] = "UPPER".getBytes();
        bytes[395] = "USER".getBytes();
        bytes[396] = "UTC_DATE".getBytes();
        bytes[397] = "UTC_TIME".getBytes();
        bytes[398] = "UTC_TIMESTAMP".getBytes();
        bytes[399] = "UUID".getBytes();
        bytes[400] = "UUID_SHORT".getBytes();
        bytes[401] = "UUID_TO_BIN".getBytes();
        bytes[402] = "VALIDATE_PASSWORD_STRENGTH".getBytes();
        bytes[403] = "VALUES".getBytes();
        bytes[404] = "VAR_POP".getBytes();
        bytes[405] = "VAR_SAMP".getBytes();
        bytes[406] = "VARIANCE".getBytes();
        bytes[407] = "VERSION".getBytes();
        bytes[408] = "WAIT_FOR_EXECUTED_GTID_SET".getBytes();
        bytes[409] = "WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS".getBytes();
        bytes[410] = "WEEK".getBytes();
        bytes[411] = "WEEKDAY".getBytes();
        bytes[412] = "WEEKOFYEAR".getBytes();
        bytes[413] = "WEIGHT_STRING".getBytes();
        bytes[414] = "YEAR".getBytes();
        bytes[415] = "YEARWEEK".getBytes();
        bytes[416] = "TO_CHAR".getBytes();
        bytes[417] = "TO_DATE".getBytes();
        bytes[418] = "TO_NCHAR".getBytes();
        bytes[419] = "TO_TIMESTAMP".getBytes();
        bytes[420] = "TO_NUMBER".getBytes();
        bytes[421] = "CHR".getBytes();
        bytes[422] = "LENGTHB".getBytes();
        bytes[423] = "ADD_MONTHS".getBytes();
        bytes[424] = "LAST_DAY".getBytes();
        bytes[425] = "NEXT_DAY".getBytes();
        bytes[426] = "MONTHS_BETWEEN".getBytes();
        bytes[427] = "NVL".getBytes();
        bytes[428] = "NVL2".getBytes();
        bytes[429] = "BITAND".getBytes();
        bytes[430] = "NANVL".getBytes();
        bytes[431] = "REMAINDER".getBytes();
        bytes[432] = "TRUNC".getBytes();
        bytes[433] = "NLS_LOWER".getBytes();
        bytes[434] = "NLS_UPPER".getBytes();
        bytes[435] = "NEW_TIME".getBytes();
        bytes[436] = "SYSTIMESTAMP".getBytes();
        bytes[437] = "TO_TIMESTAMP_TZ".getBytes();
        bytes[438] = "BIN_TO_NUM".getBytes();
        bytes[439] = "HEXTORAW".getBytes();
        bytes[440] = "RAWTOHEX".getBytes();
        bytes[441] = "RAWTONHEX".getBytes();
        bytes[442] = "TO_BINARY_DOUBLE".getBytes();
        bytes[443] = "TO_BINARY_FLOAT".getBytes();
        bytes[444] = "TO_CLOB".getBytes();
        bytes[445] = "TO_NCLOB".getBytes();
        bytes[446] = "TO_LOB".getBytes();
        bytes[447] = "TRANSLATE".getBytes();
        bytes[448] = "SINH".getBytes();
        bytes[449] = "COSH".getBytes();
        bytes[450] = "TANH".getBytes();
        bytes[451] = "WIDTH_BUCKET".getBytes();
        bytes[452] = "INITCAP".getBytes();
        bytes[453] = "NLS_INITCAP".getBytes();
        bytes[454] = "NLSSORT".getBytes();
        bytes[455] = "TREAD".getBytes();
        bytes[456] = "NLS_CHARSET_DECL_LEN".getBytes();
        bytes[457] = "NLS_CHARSET_ID".getBytes();
        bytes[458] = "NLS_CHARSET_NAME".getBytes();
        bytes[459] = "DBTIMEZONE".getBytes();
        bytes[460] = "FROM_TZ".getBytes();
        bytes[461] = "NUMTODSINTERVAL".getBytes();
        bytes[462] = "NUMTOYMINTERVAL".getBytes();
        bytes[463] = "SESSIONTIMEZONE".getBytes();
        bytes[464] = "SYS_EXTRACT_UTC".getBytes();
        bytes[465] = "TO_DSINTERVAL".getBytes();
        bytes[466] = "TO_YMINTERVAL".getBytes();
        bytes[467] = "TZ_OFFSET".getBytes();
        bytes[468] = "ASCIISTR".getBytes();
        bytes[469] = "CHARTOROWID".getBytes();
        bytes[470] = "COMPOSE".getBytes();
        bytes[471] = "DECOMPOSE".getBytes();
        bytes[472] = "ROWIDTOCHAR".getBytes();
        bytes[473] = "ROWIDTONCHAR".getBytes();
        bytes[474] = "SCN_TO_TIMESTAMP".getBytes();
        bytes[475] = "TIMESTAMP_TO_SCN".getBytes();
        bytes[476] = "TO_MULTI_BYTE".getBytes();
        bytes[477] = "TO_SINGLE_BYTE".getBytes();
        bytes[478] = "UNISTR".getBytes();
        bytes[479] = "DUMP".getBytes();
        bytes[480] = "ORA_HASH".getBytes();
        bytes[481] = "VSIZE".getBytes();
        bytes[482] = "LNNVL".getBytes();
    }
}
