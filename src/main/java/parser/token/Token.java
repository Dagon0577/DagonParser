package parser.token;

/**
 * @author Dagon0577
 * @date 2020/5/15
 */
public abstract class Token {
    public static final String unknown = "UNKNOWN_TOKEN";
    public static final int EOF = 1;
    public static final int IDENTIFIER = 2;
    public static final int LITERAL_BIT = 3;
    public static final int LITERAL_BOOL_FALSE = 4;
    public static final int LITERAL_BOOL_TRUE = 5;
    public static final int LITERAL_CHARS = 6;
    public static final int LITERAL_HEX = 7;
    public static final int LITERAL_NCHARS = 8;
    public static final int LITERAL_NULL = 9;
    public static final int LITERAL_NUM_MIX_DIGIT = 10;
    public static final int LITERAL_NUM_PURE_DIGIT = 11;
    public static final int OP_AMPERSAND = 12;
    public static final int OP_ASSIGN = 13;
    public static final int OP_ASTERISK = 14;
    public static final int OP_CARET = 15;
    public static final int OP_EQUALS = 16;
    public static final int OP_EXCLAMATION = 17;
    public static final int OP_GREATER_OR_EQUALS = 18;
    public static final int OP_GREATER_THAN = 19;
    public static final int OP_LEFT_SHIFT = 20;
    public static final int OP_LESS_OR_EQUALS = 21;
    public static final int OP_LESS_OR_GREATER = 22;
    public static final int OP_LESS_THAN = 23;
    public static final int OP_LOGICAL_AND = 24;
    public static final int OP_LOGICAL_OR = 25;
    public static final int OP_MINUS = 26;
    public static final int OP_NOT_EQUALS = 27;
    public static final int OP_NULL_SAFE_EQUALS = 28;
    public static final int OP_PERCENT = 29;
    public static final int OP_PLUS = 30;
    public static final int OP_RIGHT_SHIFT = 31;
    public static final int OP_SLASH = 32;
    public static final int OP_TILDE = 33;
    public static final int OP_VERTICAL_BAR = 34;
    public static final int PLACE_HOLDER = 35;
    public static final int PUNC_C_STYLE_COMMENT_END = 36;
    public static final int PUNC_COLON = 37;
    public static final int PUNC_COMMA = 38;
    public static final int PUNC_DOT = 39;
    public static final int PUNC_LEFT_BRACE = 40;
    public static final int PUNC_LEFT_BRACKET = 41;
    public static final int PUNC_LEFT_PAREN = 42;
    public static final int PUNC_RIGHT_BRACE = 43;
    public static final int PUNC_RIGHT_BRACKET = 44;
    public static final int PUNC_RIGHT_PAREN = 45;
    public static final int PUNC_SEMICOLON = 46;
    public static final int QUESTION_MARK = 47;
    public static final int SYS_VAR = 48;
    public static final int USR_VAR = 49;
    public static final int KW_ACCESSIBLE = 50;
    public static final int KW_ADD = 51;
    public static final int KW_ALL = 52;
    public static final int KW_ALTER = 53;
    public static final int KW_ANALYZE = 54;
    public static final int KW_AND = 55;
    public static final int KW_AS = 56;
    public static final int KW_ASC = 57;
    public static final int KW_ASENSITIVE = 58;
    public static final int KW_BEFORE = 59;
    public static final int KW_BETWEEN = 60;
    public static final int KW_BIGINT = 61;
    public static final int KW_BINARY = 62;
    public static final int KW_BLOB = 63;
    public static final int KW_BOTH = 64;
    public static final int KW_BY = 65;
    public static final int KW_CALL = 66;
    public static final int KW_CASCADE = 67;
    public static final int KW_CASE = 68;
    public static final int KW_CHANGE = 69;
    public static final int KW_CHAR = 70;
    public static final int KW_CHARACTER = 71;
    public static final int KW_CHECK = 72;
    public static final int KW_COLLATE = 73;
    public static final int KW_COLUMN = 74;
    public static final int KW_CONDITION = 75;
    public static final int KW_CONSTRAINT = 76;
    public static final int KW_CONTINUE = 77;
    public static final int KW_CONVERT = 78;
    public static final int KW_CREATE = 79;
    public static final int KW_CROSS = 80;
    public static final int KW_CUBE = 81;
    public static final int KW_CUME_DIST = 82;
    public static final int KW_CURRENT_DATE = 83;
    public static final int KW_CURRENT_TIME = 84;
    public static final int KW_CURRENT_TIMESTAMP = 85;
    public static final int KW_CURRENT_USER = 86;
    public static final int KW_CURSOR = 87;
    public static final int KW_DATABASE = 88;
    public static final int KW_DATABASES = 89;
    public static final int KW_DAY_HOUR = 90;
    public static final int KW_DAY_MICROSECOND = 91;
    public static final int KW_DAY_MINUTE = 92;
    public static final int KW_DAY_SECOND = 93;
    public static final int KW_DEC = 94;
    public static final int KW_DECIMAL = 95;
    public static final int KW_DECLARE = 96;
    public static final int KW_DEFAULT = 97;
    public static final int KW_DELAYED = 98;
    public static final int KW_DELETE = 99;
    public static final int KW_DENSE_RANK = 100;
    public static final int KW_DESC = 101;
    public static final int KW_DESCRIBE = 102;
    public static final int KW_DETERMINISTIC = 103;
    public static final int KW_DISTINCT = 104;
    public static final int KW_DISTINCTROW = 105;
    public static final int KW_DIV = 106;
    public static final int KW_DOUBLE = 107;
    public static final int KW_DROP = 108;
    public static final int KW_DUAL = 109;
    public static final int KW_EACH = 110;
    public static final int KW_ELSE = 111;
    public static final int KW_ELSEIF = 112;
    public static final int KW_EMPTY = 113;
    public static final int KW_ENCLOSED = 114;
    public static final int KW_ESCAPED = 115;
    public static final int KW_EXCEPT = 116;
    public static final int KW_EXISTS = 117;
    public static final int KW_EXIT = 118;
    public static final int KW_EXPLAIN = 119;
    public static final int KW_FETCH = 120;
    public static final int KW_FIRST_VALUE = 121;
    public static final int KW_FLOAT = 122;
    public static final int KW_FLOAT4 = 123;
    public static final int KW_FLOAT8 = 124;
    public static final int KW_FOR = 125;
    public static final int KW_FORCE = 126;
    public static final int KW_FOREIGN = 127;
    public static final int KW_FROM = 128;
    public static final int KW_FULLTEXT = 129;
    public static final int KW_FUNCTION = 130;
    public static final int KW_GENERATED = 131;
    public static final int KW_GET = 132;
    public static final int KW_GRANT = 133;
    public static final int KW_GROUP = 134;
    public static final int KW_GROUPING = 135;
    public static final int KW_GROUPS = 136;
    public static final int KW_HAVING = 137;
    public static final int KW_HIGH_PRIORITY = 138;
    public static final int KW_HOUR_MICROSECOND = 139;
    public static final int KW_HOUR_MINUTE = 140;
    public static final int KW_HOUR_SECOND = 141;
    public static final int KW_IF = 142;
    public static final int KW_IGNORE = 143;
    public static final int KW_IN = 144;
    public static final int KW_INDEX = 145;
    public static final int KW_INFILE = 146;
    public static final int KW_INNER = 147;
    public static final int KW_INOUT = 148;
    public static final int KW_INSENSITIVE = 149;
    public static final int KW_INSERT = 150;
    public static final int KW_INT = 151;
    public static final int KW_INT1 = 152;
    public static final int KW_INT2 = 153;
    public static final int KW_INT3 = 154;
    public static final int KW_INT4 = 155;
    public static final int KW_INT8 = 156;
    public static final int KW_INTEGER = 157;
    public static final int KW_INTERVAL = 158;
    public static final int KW_INTO = 159;
    public static final int KW_IO_AFTER_GTIDS = 160;
    public static final int KW_IO_BEFORE_GTIDS = 161;
    public static final int KW_IS = 162;
    public static final int KW_ITERATE = 163;
    public static final int KW_JOIN = 164;
    public static final int KW_JSON_TABLE = 165;
    public static final int KW_KEY = 166;
    public static final int KW_KEYS = 167;
    public static final int KW_KILL = 168;
    public static final int KW_LAG = 169;
    public static final int KW_LAST_VALUE = 170;
    public static final int KW_LATERAL = 171;
    public static final int KW_LEAD = 172;
    public static final int KW_LEADING = 173;
    public static final int KW_LEAVE = 174;
    public static final int KW_LEFT = 175;
    public static final int KW_LIKE = 176;
    public static final int KW_LIMIT = 177;
    public static final int KW_LINEAR = 178;
    public static final int KW_LINES = 179;
    public static final int KW_LOAD = 180;
    public static final int KW_LOCALTIME = 181;
    public static final int KW_LOCALTIMESTAMP = 182;
    public static final int KW_LOCK = 183;
    public static final int KW_LONG = 184;
    public static final int KW_LONGBLOB = 185;
    public static final int KW_LONGTEXT = 186;
    public static final int KW_LOOP = 187;
    public static final int KW_LOW_PRIORITY = 188;
    public static final int KW_MASTER_BIND = 189;
    public static final int KW_MASTER_SSL_VERIFY_SERVER_CERT = 190;
    public static final int KW_MATCH = 191;
    public static final int KW_MAXVALUE = 192;
    public static final int KW_MEDIUMBLOB = 193;
    public static final int KW_MEDIUMINT = 194;
    public static final int KW_MEDIUMTEXT = 195;
    public static final int KW_MIDDLEINT = 196;
    public static final int KW_MINUTE_MICROSECOND = 197;
    public static final int KW_MINUTE_SECOND = 198;
    public static final int KW_MOD = 199;
    public static final int KW_MODIFIES = 200;
    public static final int KW_NATURAL = 201;
    public static final int KW_NOT = 202;
    public static final int KW_NO_WRITE_TO_BINLOG = 203;
    public static final int KW_NTH_VALUE = 204;
    public static final int KW_NTILE = 205;
    public static final int KW_NUMERIC = 206;
    public static final int KW_OF = 207;
    public static final int KW_ON = 208;
    public static final int KW_OPTIMIZE = 209;
    public static final int KW_OPTIMIZER_COSTS = 210;
    public static final int KW_OPTION = 211;
    public static final int KW_OPTIONALLY = 212;
    public static final int KW_OR = 213;
    public static final int KW_ORDER = 214;
    public static final int KW_OUT = 215;
    public static final int KW_OUTER = 216;
    public static final int KW_OUTFILE = 217;
    public static final int KW_OVER = 218;
    public static final int KW_PARTITION = 219;
    public static final int KW_PERCENT_RANK = 220;
    public static final int KW_PERSIST = 221;
    public static final int KW_PERSIST_ONLY = 222;
    public static final int KW_PRECISION = 223;
    public static final int KW_PRIMARY = 224;
    public static final int KW_PROCEDURE = 225;
    public static final int KW_PURGE = 226;
    public static final int KW_RANGE = 227;
    public static final int KW_RANK = 228;
    public static final int KW_READ = 229;
    public static final int KW_READS = 230;
    public static final int KW_READ_WRITE = 231;
    public static final int KW_REAL = 232;
    public static final int KW_RECURSIVE = 233;
    public static final int KW_REFERENCES = 234;
    public static final int KW_REGEXP = 235;
    public static final int KW_RELEASE = 236;
    public static final int KW_RENAME = 237;
    public static final int KW_REPEAT = 238;
    public static final int KW_REPLACE = 239;
    public static final int KW_REQUIRE = 240;
    public static final int KW_RESIGNAL = 241;
    public static final int KW_RESTRICT = 242;
    public static final int KW_RETURN = 243;
    public static final int KW_REVOKE = 244;
    public static final int KW_RIGHT = 245;
    public static final int KW_RLIKE = 246;
    public static final int KW_ROW = 247;
    public static final int KW_ROWS = 248;
    public static final int KW_ROW_NUMBER = 249;
    public static final int KW_SCHEMA = 250;
    public static final int KW_SCHEMAS = 251;
    public static final int KW_SECOND_MICROSECOND = 252;
    public static final int KW_SELECT = 253;
    public static final int KW_SENSITIVE = 254;
    public static final int KW_SEPARATOR = 255;
    public static final int KW_SET = 256;
    public static final int KW_SHOW = 257;
    public static final int KW_SIGNAL = 258;
    public static final int KW_SMALLINT = 259;
    public static final int KW_SPATIAL = 260;
    public static final int KW_SPECIFIC = 261;
    public static final int KW_SQL = 262;
    public static final int KW_SQLEXCEPTION = 263;
    public static final int KW_SQLSTATE = 264;
    public static final int KW_SQLWARNING = 265;
    public static final int KW_SQL_BIG_RESULT = 266;
    public static final int KW_SQL_CALC_FOUND_ROWS = 267;
    public static final int KW_SQL_SMALL_RESULT = 268;
    public static final int KW_SSL = 269;
    public static final int KW_STARTING = 270;
    public static final int KW_STORED = 271;
    public static final int KW_STRAIGHT_JOIN = 272;
    public static final int KW_SYSTEM = 273;
    public static final int KW_TABLE = 274;
    public static final int KW_TERMINATED = 275;
    public static final int KW_THEN = 276;
    public static final int KW_TINYBLOB = 277;
    public static final int KW_TINYINT = 278;
    public static final int KW_TINYTEXT = 279;
    public static final int KW_TO = 280;
    public static final int KW_TRAILING = 281;
    public static final int KW_TRIGGER = 282;
    public static final int KW_UNDO = 283;
    public static final int KW_UNION = 284;
    public static final int KW_UNIQUE = 285;
    public static final int KW_UNLOCK = 286;
    public static final int KW_UNSIGNED = 287;
    public static final int KW_UPDATE = 288;
    public static final int KW_USAGE = 289;
    public static final int KW_USE = 290;
    public static final int KW_USING = 291;
    public static final int KW_UTC_DATE = 292;
    public static final int KW_UTC_TIME = 293;
    public static final int KW_UTC_TIMESTAMP = 294;
    public static final int KW_VALUES = 295;
    public static final int KW_VARBINARY = 296;
    public static final int KW_VARCHAR = 297;
    public static final int KW_VARCHARACTER = 298;
    public static final int KW_VARYING = 299;
    public static final int KW_VIRTUAL = 300;
    public static final int KW_WHEN = 301;
    public static final int KW_WHERE = 302;
    public static final int KW_WHILE = 303;
    public static final int KW_WINDOW = 304;
    public static final int KW_WITH = 305;
    public static final int KW_WRITE = 306;
    public static final int KW_XOR = 307;
    public static final int KW_YEAR_MONTH = 308;
    public static final int KW_ZEROFILL = 309;

    public static final String getInfo(int type) {
        return info[type];
    }

    public static final byte[] getBytes(int type) {
        return bytes[type];
    }

    private static final String[] info = new String[512];
    private static final byte[][] bytes = new byte[512][];

    static {
        info[1] = "EOF";
        info[2] = "IDENTIFIER";
        info[3] = "LITERAL_BIT";
        info[4] = "LITERAL_BOOL_FALSE";
        info[5] = "LITERAL_BOOL_TRUE";
        info[6] = "LITERAL_CHARS";
        info[7] = "LITERAL_HEX";
        info[8] = "LITERAL_NCHARS";
        info[9] = "LITERAL_NULL";
        info[10] = "LITERAL_NUM_MIX_DIGIT";
        info[11] = "LITERAL_NUM_PURE_DIGIT";
        info[12] = "OP_AMPERSAND";
        info[13] = "OP_ASSIGN";
        info[14] = "OP_ASTERISK";
        info[15] = "OP_CARET";
        info[16] = "OP_EQUALS";
        info[17] = "OP_EXCLAMATION";
        info[18] = "OP_GREATER_OR_EQUALS";
        info[19] = "OP_GREATER_THAN";
        info[20] = "OP_LEFT_SHIFT";
        info[21] = "OP_LESS_OR_EQUALS";
        info[22] = "OP_LESS_OR_GREATER";
        info[23] = "OP_LESS_THAN";
        info[24] = "OP_LOGICAL_AND";
        info[25] = "OP_LOGICAL_OR";
        info[26] = "OP_MINUS";
        info[27] = "OP_NOT_EQUALS";
        info[28] = "OP_NULL_SAFE_EQUALS";
        info[29] = "OP_PERCENT";
        info[30] = "OP_PLUS";
        info[31] = "OP_RIGHT_SHIFT";
        info[32] = "OP_SLASH";
        info[33] = "OP_TILDE";
        info[34] = "OP_VERTICAL_BAR";
        info[35] = "PLACE_HOLDER";
        info[36] = "PUNC_C_STYLE_COMMENT_END";
        info[37] = "PUNC_COLON";
        info[38] = "PUNC_COMMA";
        info[39] = "PUNC_DOT";
        info[40] = "PUNC_LEFT_BRACE";
        info[41] = "PUNC_LEFT_BRACKET";
        info[42] = "PUNC_LEFT_PAREN";
        info[43] = "PUNC_RIGHT_BRACE";
        info[44] = "PUNC_RIGHT_BRACKET";
        info[45] = "PUNC_RIGHT_PAREN";
        info[46] = "PUNC_SEMICOLON";
        info[47] = "QUESTION_MARK";
        info[48] = "SYS_VAR";
        info[49] = "USR_VAR";
        info[50] = "KW_ACCESSIBLE";
        info[51] = "KW_ADD";
        info[52] = "KW_ALL";
        info[53] = "KW_ALTER";
        info[54] = "KW_ANALYZE";
        info[55] = "KW_AND";
        info[56] = "KW_AS";
        info[57] = "KW_ASC";
        info[58] = "KW_ASENSITIVE";
        info[59] = "KW_BEFORE";
        info[60] = "KW_BETWEEN";
        info[61] = "KW_BIGINT";
        info[62] = "KW_BINARY";
        info[63] = "KW_BLOB";
        info[64] = "KW_BOTH";
        info[65] = "KW_BY";
        info[66] = "KW_CALL";
        info[67] = "KW_CASCADE";
        info[68] = "KW_CASE";
        info[69] = "KW_CHANGE";
        info[70] = "KW_CHAR";
        info[71] = "KW_CHARACTER";
        info[72] = "KW_CHECK";
        info[73] = "KW_COLLATE";
        info[74] = "KW_COLUMN";
        info[75] = "KW_CONDITION";
        info[76] = "KW_CONSTRAINT";
        info[77] = "KW_CONTINUE";
        info[78] = "KW_CONVERT";
        info[79] = "KW_CREATE";
        info[80] = "KW_CROSS";
        info[81] = "KW_CUBE";
        info[82] = "KW_CUME_DIST";
        info[83] = "KW_CURRENT_DATE";
        info[84] = "KW_CURRENT_TIME";
        info[85] = "KW_CURRENT_TIMESTAMP";
        info[86] = "KW_CURRENT_USER";
        info[87] = "KW_CURSOR";
        info[88] = "KW_DATABASE";
        info[89] = "KW_DATABASES";
        info[90] = "KW_DAY_HOUR";
        info[91] = "KW_DAY_MICROSECOND";
        info[92] = "KW_DAY_MINUTE";
        info[93] = "KW_DAY_SECOND";
        info[94] = "KW_DEC";
        info[95] = "KW_DECIMAL";
        info[96] = "KW_DECLARE";
        info[97] = "KW_DEFAULT";
        info[98] = "KW_DELAYED";
        info[99] = "KW_DELETE";
        info[100] = "KW_DENSE_RANK";
        info[101] = "KW_DESC";
        info[102] = "KW_DESCRIBE";
        info[103] = "KW_DETERMINISTIC";
        info[104] = "KW_DISTINCT";
        info[105] = "KW_DISTINCTROW";
        info[106] = "KW_DIV";
        info[107] = "KW_DOUBLE";
        info[108] = "KW_DROP";
        info[109] = "KW_DUAL";
        info[110] = "KW_EACH";
        info[111] = "KW_ELSE";
        info[112] = "KW_ELSEIF";
        info[113] = "KW_EMPTY";
        info[114] = "KW_ENCLOSED";
        info[115] = "KW_ESCAPED";
        info[116] = "KW_EXCEPT";
        info[117] = "KW_EXISTS";
        info[118] = "KW_EXIT";
        info[119] = "KW_EXPLAIN";
        info[120] = "KW_FETCH";
        info[121] = "KW_FIRST_VALUE";
        info[122] = "KW_FLOAT";
        info[123] = "KW_FLOAT4";
        info[124] = "KW_FLOAT8";
        info[125] = "KW_FOR";
        info[126] = "KW_FORCE";
        info[127] = "KW_FOREIGN";
        info[128] = "KW_FROM";
        info[129] = "KW_FULLTEXT";
        info[130] = "KW_FUNCTION";
        info[131] = "KW_GENERATED";
        info[132] = "KW_GET";
        info[133] = "KW_GRANT";
        info[134] = "KW_GROUP";
        info[135] = "KW_GROUPING";
        info[136] = "KW_GROUPS";
        info[137] = "KW_HAVING";
        info[138] = "KW_HIGH_PRIORITY";
        info[139] = "KW_HOUR_MICROSECOND";
        info[140] = "KW_HOUR_MINUTE";
        info[141] = "KW_HOUR_SECOND";
        info[142] = "KW_IF";
        info[143] = "KW_IGNORE";
        info[144] = "KW_IN";
        info[145] = "KW_INDEX";
        info[146] = "KW_INFILE";
        info[147] = "KW_INNER";
        info[148] = "KW_INOUT";
        info[149] = "KW_INSENSITIVE";
        info[150] = "KW_INSERT";
        info[151] = "KW_INT";
        info[152] = "KW_INT1";
        info[153] = "KW_INT2";
        info[154] = "KW_INT3";
        info[155] = "KW_INT4";
        info[156] = "KW_INT8";
        info[157] = "KW_INTEGER";
        info[158] = "KW_INTERVAL";
        info[159] = "KW_INTO";
        info[160] = "KW_IO_AFTER_GTIDS";
        info[161] = "KW_IO_BEFORE_GTIDS";
        info[162] = "KW_IS";
        info[163] = "KW_ITERATE";
        info[164] = "KW_JOIN";
        info[165] = "KW_JSON_TABLE";
        info[166] = "KW_KEY";
        info[167] = "KW_KEYS";
        info[168] = "KW_KILL";
        info[169] = "KW_LAG";
        info[170] = "KW_LAST_VALUE";
        info[171] = "KW_LATERAL";
        info[172] = "KW_LEAD";
        info[173] = "KW_LEADING";
        info[174] = "KW_LEAVE";
        info[175] = "KW_LEFT";
        info[176] = "KW_LIKE";
        info[177] = "KW_LIMIT";
        info[178] = "KW_LINEAR";
        info[179] = "KW_LINES";
        info[180] = "KW_LOAD";
        info[181] = "KW_LOCALTIME";
        info[182] = "KW_LOCALTIMESTAMP";
        info[183] = "KW_LOCK";
        info[184] = "KW_LONG";
        info[185] = "KW_LONGBLOB";
        info[186] = "KW_LONGTEXT";
        info[187] = "KW_LOOP";
        info[188] = "KW_LOW_PRIORITY";
        info[189] = "KW_MASTER_BIND";
        info[190] = "KW_MASTER_SSL_VERIFY_SERVER_CERT";
        info[191] = "KW_MATCH";
        info[192] = "KW_MAXVALUE";
        info[193] = "KW_MEDIUMBLOB";
        info[194] = "KW_MEDIUMINT";
        info[195] = "KW_MEDIUMTEXT";
        info[196] = "KW_MIDDLEINT";
        info[197] = "KW_MINUTE_MICROSECOND";
        info[198] = "KW_MINUTE_SECOND";
        info[199] = "KW_MOD";
        info[200] = "KW_MODIFIES";
        info[201] = "KW_NATURAL";
        info[202] = "KW_NOT";
        info[203] = "KW_NO_WRITE_TO_BINLOG";
        info[204] = "KW_NTH_VALUE";
        info[205] = "KW_NTILE";
        info[206] = "KW_NUMERIC";
        info[207] = "KW_OF";
        info[208] = "KW_ON";
        info[209] = "KW_OPTIMIZE";
        info[210] = "KW_OPTIMIZER_COSTS";
        info[211] = "KW_OPTION";
        info[212] = "KW_OPTIONALLY";
        info[213] = "KW_OR";
        info[214] = "KW_ORDER";
        info[215] = "KW_OUT";
        info[216] = "KW_OUTER";
        info[217] = "KW_OUTFILE";
        info[218] = "KW_OVER";
        info[219] = "KW_PARTITION";
        info[220] = "KW_PERCENT_RANK";
        info[221] = "KW_PERSIST";
        info[222] = "KW_PERSIST_ONLY";
        info[223] = "KW_PRECISION";
        info[224] = "KW_PRIMARY";
        info[225] = "KW_PROCEDURE";
        info[226] = "KW_PURGE";
        info[227] = "KW_RANGE";
        info[228] = "KW_RANK";
        info[229] = "KW_READ";
        info[230] = "KW_READS";
        info[231] = "KW_READ_WRITE";
        info[232] = "KW_REAL";
        info[233] = "KW_RECURSIVE";
        info[234] = "KW_REFERENCES";
        info[235] = "KW_REGEXP";
        info[236] = "KW_RELEASE";
        info[237] = "KW_RENAME";
        info[238] = "KW_REPEAT";
        info[239] = "KW_REPLACE";
        info[240] = "KW_REQUIRE";
        info[241] = "KW_RESIGNAL";
        info[242] = "KW_RESTRICT";
        info[243] = "KW_RETURN";
        info[244] = "KW_REVOKE";
        info[245] = "KW_RIGHT";
        info[246] = "KW_RLIKE";
        info[247] = "KW_ROW";
        info[248] = "KW_ROWS";
        info[249] = "KW_ROW_NUMBER";
        info[250] = "KW_SCHEMA";
        info[251] = "KW_SCHEMAS";
        info[252] = "KW_SECOND_MICROSECOND";
        info[253] = "KW_SELECT";
        info[254] = "KW_SENSITIVE";
        info[255] = "KW_SEPARATOR";
        info[256] = "KW_SET";
        info[257] = "KW_SHOW";
        info[258] = "KW_SIGNAL";
        info[259] = "KW_SMALLINT";
        info[260] = "KW_SPATIAL";
        info[261] = "KW_SPECIFIC";
        info[262] = "KW_SQL";
        info[263] = "KW_SQLEXCEPTION";
        info[264] = "KW_SQLSTATE";
        info[265] = "KW_SQLWARNING";
        info[266] = "KW_SQL_BIG_RESULT";
        info[267] = "KW_SQL_CALC_FOUND_ROWS";
        info[268] = "KW_SQL_SMALL_RESULT";
        info[269] = "KW_SSL";
        info[270] = "KW_STARTING";
        info[271] = "KW_STORED";
        info[272] = "KW_STRAIGHT_JOIN";
        info[273] = "KW_SYSTEM";
        info[274] = "KW_TABLE";
        info[275] = "KW_TERMINATED";
        info[276] = "KW_THEN";
        info[277] = "KW_TINYBLOB";
        info[278] = "KW_TINYINT";
        info[279] = "KW_TINYTEXT";
        info[280] = "KW_TO";
        info[281] = "KW_TRAILING";
        info[282] = "KW_TRIGGER";
        info[283] = "KW_UNDO";
        info[284] = "KW_UNION";
        info[285] = "KW_UNIQUE";
        info[286] = "KW_UNLOCK";
        info[287] = "KW_UNSIGNED";
        info[288] = "KW_UPDATE";
        info[289] = "KW_USAGE";
        info[290] = "KW_USE";
        info[291] = "KW_USING";
        info[292] = "KW_UTC_DATE";
        info[293] = "KW_UTC_TIME";
        info[294] = "KW_UTC_TIMESTAMP";
        info[295] = "KW_VALUES";
        info[296] = "KW_VARBINARY";
        info[297] = "KW_VARCHAR";
        info[298] = "KW_VARCHARACTER";
        info[299] = "KW_VARYING";
        info[300] = "KW_VIRTUAL";
        info[301] = "KW_WHEN";
        info[302] = "KW_WHERE";
        info[303] = "KW_WHILE";
        info[304] = "KW_WINDOW";
        info[305] = "KW_WITH";
        info[306] = "KW_WRITE";
        info[307] = "KW_XOR";
        info[308] = "KW_YEAR_MONTH";
        info[309] = "KW_ZEROFILL";

        bytes[4] = "FALSE".getBytes();
        bytes[5] = "TRUE".getBytes();
        bytes[9] = "NULL".getBytes();
        bytes[12] = "&".getBytes();
        bytes[13] = ":=".getBytes();
        bytes[14] = "*".getBytes();
        bytes[15] = "^".getBytes();
        bytes[16] = "=".getBytes();
        bytes[17] = "!".getBytes();
        bytes[18] = ">=".getBytes();
        bytes[19] = ">".getBytes();
        bytes[20] = "<<".getBytes();
        bytes[21] = "<=".getBytes();
        bytes[22] = "<>".getBytes();
        bytes[23] = "<".getBytes();
        bytes[24] = "&&".getBytes();
        bytes[25] = "||".getBytes();
        bytes[26] = "-".getBytes();
        bytes[27] = "!=".getBytes();
        bytes[28] = "<=>".getBytes();
        bytes[29] = "%".getBytes();
        bytes[30] = "+".getBytes();
        bytes[31] = ">>".getBytes();
        bytes[32] = "/".getBytes();
        bytes[33] = "~".getBytes();
        bytes[34] = "|".getBytes();
        bytes[37] = ":".getBytes();
        bytes[38] = ",".getBytes();
        bytes[39] = ".".getBytes();
        bytes[40] = "{".getBytes();
        bytes[41] = "[".getBytes();
        bytes[42] = "(".getBytes();
        bytes[43] = "}".getBytes();
        bytes[44] = "]".getBytes();
        bytes[45] = ")".getBytes();
        bytes[46] = ";".getBytes();
        bytes[47] = "?".getBytes();
        bytes[50] = "ACCESSIBLE".getBytes();
        bytes[51] = "ADD".getBytes();
        bytes[52] = "ALL".getBytes();
        bytes[53] = "ALTER".getBytes();
        bytes[54] = "ANALYZE".getBytes();
        bytes[55] = "AND".getBytes();
        bytes[56] = "AS".getBytes();
        bytes[57] = "ASC".getBytes();
        bytes[58] = "ASENSITIVE".getBytes();
        bytes[59] = "BEFORE".getBytes();
        bytes[60] = "BETWEEN".getBytes();
        bytes[61] = "BIGINT".getBytes();
        bytes[62] = "BINARY".getBytes();
        bytes[63] = "BLOB".getBytes();
        bytes[64] = "BOTH".getBytes();
        bytes[65] = "BY".getBytes();
        bytes[66] = "CALL".getBytes();
        bytes[67] = "CASCADE".getBytes();
        bytes[68] = "CASE".getBytes();
        bytes[69] = "CHANGE".getBytes();
        bytes[70] = "CHAR".getBytes();
        bytes[71] = "CHARACTER".getBytes();
        bytes[72] = "CHECK".getBytes();
        bytes[73] = "COLLATE".getBytes();
        bytes[74] = "COLUMN".getBytes();
        bytes[75] = "CONDITION".getBytes();
        bytes[76] = "CONSTRAINT".getBytes();
        bytes[77] = "CONTINUE".getBytes();
        bytes[78] = "CONVERT".getBytes();
        bytes[79] = "CREATE".getBytes();
        bytes[80] = "CROSS".getBytes();
        bytes[81] = "CUBE".getBytes();
        bytes[82] = "CUME_DIST".getBytes();
        bytes[83] = "CURRENT_DATE".getBytes();
        bytes[84] = "CURRENT_TIME".getBytes();
        bytes[85] = "CURRENT_TIMESTAMP".getBytes();
        bytes[86] = "CURRENT_USER".getBytes();
        bytes[87] = "CURSOR".getBytes();
        bytes[88] = "DATABASE".getBytes();
        bytes[89] = "DATABASES".getBytes();
        bytes[90] = "DAY_HOUR".getBytes();
        bytes[91] = "DAY_MICROSECOND".getBytes();
        bytes[92] = "DAY_MINUTE".getBytes();
        bytes[93] = "DAY_SECOND".getBytes();
        bytes[94] = "DEC".getBytes();
        bytes[95] = "DECIMAL".getBytes();
        bytes[96] = "DECLARE".getBytes();
        bytes[97] = "DEFAULT".getBytes();
        bytes[98] = "DELAYED".getBytes();
        bytes[99] = "DELETE".getBytes();
        bytes[100] = "DENSE_RANK".getBytes();
        bytes[101] = "DESC".getBytes();
        bytes[102] = "DESCRIBE".getBytes();
        bytes[103] = "DETERMINISTIC".getBytes();
        bytes[104] = "DISTINCT".getBytes();
        bytes[105] = "DISTINCTROW".getBytes();
        bytes[106] = "DIV".getBytes();
        bytes[107] = "DOUBLE".getBytes();
        bytes[108] = "DROP".getBytes();
        bytes[109] = "DUAL".getBytes();
        bytes[110] = "EACH".getBytes();
        bytes[111] = "ELSE".getBytes();
        bytes[112] = "ELSEIF".getBytes();
        bytes[113] = "EMPTY".getBytes();
        bytes[114] = "ENCLOSED".getBytes();
        bytes[115] = "ESCAPED".getBytes();
        bytes[116] = "EXCEPT".getBytes();
        bytes[117] = "EXISTS".getBytes();
        bytes[118] = "EXIT".getBytes();
        bytes[119] = "EXPLAIN".getBytes();
        bytes[120] = "FETCH".getBytes();
        bytes[121] = "FIRST_VALUE".getBytes();
        bytes[122] = "FLOAT".getBytes();
        bytes[123] = "FLOAT4".getBytes();
        bytes[124] = "FLOAT8".getBytes();
        bytes[125] = "FOR".getBytes();
        bytes[126] = "FORCE".getBytes();
        bytes[127] = "FOREIGN".getBytes();
        bytes[128] = "FROM".getBytes();
        bytes[129] = "FULLTEXT".getBytes();
        bytes[130] = "FUNCTION".getBytes();
        bytes[131] = "GENERATED".getBytes();
        bytes[132] = "GET".getBytes();
        bytes[133] = "GRANT".getBytes();
        bytes[134] = "GROUP".getBytes();
        bytes[135] = "GROUPING".getBytes();
        bytes[136] = "GROUPS".getBytes();
        bytes[137] = "HAVING".getBytes();
        bytes[138] = "HIGH_PRIORITY".getBytes();
        bytes[139] = "HOUR_MICROSECOND".getBytes();
        bytes[140] = "HOUR_MINUTE".getBytes();
        bytes[141] = "HOUR_SECOND".getBytes();
        bytes[142] = "IF".getBytes();
        bytes[143] = "IGNORE".getBytes();
        bytes[144] = "IN".getBytes();
        bytes[145] = "INDEX".getBytes();
        bytes[146] = "INFILE".getBytes();
        bytes[147] = "INNER".getBytes();
        bytes[148] = "INOUT".getBytes();
        bytes[149] = "INSENSITIVE".getBytes();
        bytes[150] = "INSERT".getBytes();
        bytes[151] = "INT".getBytes();
        bytes[152] = "INT1".getBytes();
        bytes[153] = "INT2".getBytes();
        bytes[154] = "INT3".getBytes();
        bytes[155] = "INT4".getBytes();
        bytes[156] = "INT8".getBytes();
        bytes[157] = "INTEGER".getBytes();
        bytes[158] = "INTERVAL".getBytes();
        bytes[159] = "INTO".getBytes();
        bytes[160] = "IO_AFTER_GTIDS".getBytes();
        bytes[161] = "IO_BEFORE_GTIDS".getBytes();
        bytes[162] = "IS".getBytes();
        bytes[163] = "ITERATE".getBytes();
        bytes[164] = "JOIN".getBytes();
        bytes[165] = "JSON_TABLE".getBytes();
        bytes[166] = "KEY".getBytes();
        bytes[167] = "KEYS".getBytes();
        bytes[168] = "KILL".getBytes();
        bytes[169] = "LAG".getBytes();
        bytes[170] = "LAST_VALUE".getBytes();
        bytes[171] = "LATERAL".getBytes();
        bytes[172] = "LEAD".getBytes();
        bytes[173] = "LEADING".getBytes();
        bytes[174] = "LEAVE".getBytes();
        bytes[175] = "LEFT".getBytes();
        bytes[176] = "LIKE".getBytes();
        bytes[177] = "LIMIT".getBytes();
        bytes[178] = "LINEAR".getBytes();
        bytes[179] = "LINES".getBytes();
        bytes[180] = "LOAD".getBytes();
        bytes[181] = "LOCALTIME".getBytes();
        bytes[182] = "LOCALTIMESTAMP".getBytes();
        bytes[183] = "LOCK".getBytes();
        bytes[184] = "LONG".getBytes();
        bytes[185] = "LONGBLOB".getBytes();
        bytes[186] = "LONGTEXT".getBytes();
        bytes[187] = "LOOP".getBytes();
        bytes[188] = "LOW_PRIORITY".getBytes();
        bytes[189] = "MASTER_BIND".getBytes();
        bytes[190] = "MASTER_SSL_VERIFY_SERVER_CERT".getBytes();
        bytes[191] = "MATCH".getBytes();
        bytes[192] = "MAXVALUE".getBytes();
        bytes[193] = "MEDIUMBLOB".getBytes();
        bytes[194] = "MEDIUMINT".getBytes();
        bytes[195] = "MEDIUMTEXT".getBytes();
        bytes[196] = "MIDDLEINT".getBytes();
        bytes[197] = "MINUTE_MICROSECOND".getBytes();
        bytes[198] = "MINUTE_SECOND".getBytes();
        bytes[199] = "MOD".getBytes();
        bytes[200] = "MODIFIES".getBytes();
        bytes[201] = "NATURAL".getBytes();
        bytes[202] = "NOT".getBytes();
        bytes[203] = "NO_WRITE_TO_BINLOG".getBytes();
        bytes[204] = "NTH_VALUE".getBytes();
        bytes[205] = "NTILE".getBytes();
        bytes[206] = "NUMERIC".getBytes();
        bytes[207] = "OF".getBytes();
        bytes[208] = "ON".getBytes();
        bytes[209] = "OPTIMIZE".getBytes();
        bytes[210] = "OPTIMIZER_COSTS".getBytes();
        bytes[211] = "OPTION".getBytes();
        bytes[212] = "OPTIONALLY".getBytes();
        bytes[213] = "OR".getBytes();
        bytes[214] = "ORDER".getBytes();
        bytes[215] = "OUT".getBytes();
        bytes[216] = "OUTER".getBytes();
        bytes[217] = "OUTFILE".getBytes();
        bytes[218] = "OVER".getBytes();
        bytes[219] = "PARTITION".getBytes();
        bytes[220] = "PERCENT_RANK".getBytes();
        bytes[221] = "PERSIST".getBytes();
        bytes[222] = "PERSIST_ONLY".getBytes();
        bytes[223] = "PRECISION".getBytes();
        bytes[224] = "PRIMARY".getBytes();
        bytes[225] = "PROCEDURE".getBytes();
        bytes[226] = "PURGE".getBytes();
        bytes[227] = "RANGE".getBytes();
        bytes[228] = "RANK".getBytes();
        bytes[229] = "READ".getBytes();
        bytes[230] = "READS".getBytes();
        bytes[231] = "READ_WRITE".getBytes();
        bytes[232] = "REAL".getBytes();
        bytes[233] = "RECURSIVE".getBytes();
        bytes[234] = "REFERENCES".getBytes();
        bytes[235] = "REGEXP".getBytes();
        bytes[236] = "RELEASE".getBytes();
        bytes[237] = "RENAME".getBytes();
        bytes[238] = "REPEAT".getBytes();
        bytes[239] = "REPLACE".getBytes();
        bytes[240] = "REQUIRE".getBytes();
        bytes[241] = "RESIGNAL".getBytes();
        bytes[242] = "RESTRICT".getBytes();
        bytes[243] = "RETURN".getBytes();
        bytes[244] = "REVOKE".getBytes();
        bytes[245] = "RIGHT".getBytes();
        bytes[246] = "RLIKE".getBytes();
        bytes[247] = "ROW".getBytes();
        bytes[248] = "ROWS".getBytes();
        bytes[249] = "ROW_NUMBER".getBytes();
        bytes[250] = "SCHEMA".getBytes();
        bytes[251] = "SCHEMAS".getBytes();
        bytes[252] = "SECOND_MICROSECOND".getBytes();
        bytes[253] = "SELECT".getBytes();
        bytes[254] = "SENSITIVE".getBytes();
        bytes[255] = "SEPARATOR".getBytes();
        bytes[256] = "SET".getBytes();
        bytes[257] = "SHOW".getBytes();
        bytes[258] = "SIGNAL".getBytes();
        bytes[259] = "SMALLINT".getBytes();
        bytes[260] = "SPATIAL".getBytes();
        bytes[261] = "SPECIFIC".getBytes();
        bytes[262] = "SQL".getBytes();
        bytes[263] = "SQLEXCEPTION".getBytes();
        bytes[264] = "SQLSTATE".getBytes();
        bytes[265] = "SQLWARNING".getBytes();
        bytes[266] = "SQL_BIG_RESULT".getBytes();
        bytes[267] = "SQL_CALC_FOUND_ROWS".getBytes();
        bytes[268] = "SQL_SMALL_RESULT".getBytes();
        bytes[269] = "SSL".getBytes();
        bytes[270] = "STARTING".getBytes();
        bytes[271] = "STORED".getBytes();
        bytes[272] = "STRAIGHT_JOIN".getBytes();
        bytes[273] = "SYSTEM".getBytes();
        bytes[274] = "TABLE".getBytes();
        bytes[275] = "TERMINATED".getBytes();
        bytes[276] = "THEN".getBytes();
        bytes[277] = "TINYBLOB".getBytes();
        bytes[278] = "TINYINT".getBytes();
        bytes[279] = "TINYTEXT".getBytes();
        bytes[280] = "TO".getBytes();
        bytes[281] = "TRAILING".getBytes();
        bytes[282] = "TRIGGER".getBytes();
        bytes[283] = "UNDO".getBytes();
        bytes[284] = "UNION".getBytes();
        bytes[285] = "UNIQUE".getBytes();
        bytes[286] = "UNLOCK".getBytes();
        bytes[287] = "UNSIGNED".getBytes();
        bytes[288] = "UPDATE".getBytes();
        bytes[289] = "USAGE".getBytes();
        bytes[290] = "USE".getBytes();
        bytes[291] = "USING".getBytes();
        bytes[292] = "UTC_DATE".getBytes();
        bytes[293] = "UTC_TIME".getBytes();
        bytes[294] = "UTC_TIMESTAMP".getBytes();
        bytes[295] = "VALUES".getBytes();
        bytes[296] = "VARBINARY".getBytes();
        bytes[297] = "VARCHAR".getBytes();
        bytes[298] = "VARCHARACTER".getBytes();
        bytes[299] = "VARYING".getBytes();
        bytes[300] = "VIRTUAL".getBytes();
        bytes[301] = "WHEN".getBytes();
        bytes[302] = "WHERE".getBytes();
        bytes[303] = "WHILE".getBytes();
        bytes[304] = "WINDOW".getBytes();
        bytes[305] = "WITH".getBytes();
        bytes[306] = "WRITE".getBytes();
        bytes[307] = "XOR".getBytes();
        bytes[308] = "YEAR_MONTH".getBytes();
        bytes[309] = "ZEROFILL".getBytes();
    }
}

