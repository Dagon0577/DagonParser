package parser;

/**
 * @author Dagon0577
 * @date 2020/5/15
 */
public class SQLType {

    public static final int ALTER_DATABASE = 1;
    public static final int ALTER_EVENT = 2;
    public static final int ALTER_FUNCTION = 3;
    public static final int ALTER_INSTANCE = 4;
    public static final int ALTER_LOG_FILE_GROUP = 5;
    public static final int ALTER_PROCEDURE = 6;
    public static final int ALTER_RESOURCE = 7;
    public static final int ALTER_SERVER = 8;
    public static final int ALTER_TABLE = 9;
    public static final int ALTER_TABLESPACE = 10;
    public static final int ALTER_USER = 11;
    public static final int ALTER_VIEW = 12;
    public static final int ANALYZE_TABLE = 13;
    public static final int BEGIN = 14;
    public static final int BEGIN_END = 15;
    public static final int BINLOG = 16;
    public static final int CACHE_INDEX = 17;
    public static final int CALL = 18;
    public static final int CASE = 19;
    public static final int CHANGE_MASTER = 20;
    public static final int CHANGE_REPL_FILTER = 21;
    public static final int CHECK_TABLE = 22;
    public static final int CHECKSUM_TABLE = 23;
    public static final int COMMIT = 24;
    public static final int CREATE_DATABASE = 25;
    public static final int CREATE_EVENT = 26;
    public static final int CREATE_FUNCTION = 27;
    public static final int CREATE_INDEX = 28;
    public static final int CREATE_LOG_FILE_GROUP = 29;
    public static final int CREATE_PROCEDURE = 30;
    public static final int CREATE_RESOURCE = 31;
    public static final int CREATE_ROLE = 32;
    public static final int CREATE_SERVER = 33;
    public static final int CREATE_SPATIAL_REFERENCE_SYSTEM = 34;
    public static final int CREATE_TABLE = 35;
    public static final int CREATE_TABLESPACE = 36;
    public static final int CREATE_TRIGGER = 37;
    public static final int CREATE_USER = 38;
    public static final int CREATE_VIEW = 39;
    public static final int CURSOR_CLOSE = 40;
    public static final int CURSOR_DECLARE = 41;
    public static final int CURSOR_FETCH = 42;
    public static final int CURSOR_OPEN = 43;
    public static final int DEALLOCATE_PREPARE = 44;
    public static final int DECLARE = 45;
    public static final int DECLARE_CONDITION = 46;
    public static final int DECLARE_HANDLER = 47;
    public static final int DELETE = 48;
    public static final int DESC = 49;
    public static final int DO = 50;
    public static final int DROP_DATABASE = 51;
    public static final int DROP_EVENT = 52;
    public static final int DROP_FUNCTION = 53;
    public static final int DROP_INDEX = 54;
    public static final int DROP_LOG_FILE_GROUP = 55;
    public static final int DROP_PROCEDURE = 56;
    public static final int DROP_RESOURCE = 57;
    public static final int DROP_ROLE = 58;
    public static final int DROP_SERVER = 59;
    public static final int DROP_SPATIAL_REFERENCE_SYSTEM = 60;
    public static final int DROP_TABLE = 61;
    public static final int DROP_TABLESPACE = 62;
    public static final int DROP_TRIGGER = 63;
    public static final int DROP_USER = 64;
    public static final int DROP_VIEW = 65;
    public static final int EXECUTE = 66;
    public static final int EXPLAIN = 67;
    public static final int FLUSH = 68;
    public static final int GET_DIAGNOSTICS = 69;
    public static final int GRANT = 70;
    public static final int HANDLER = 71;
    public static final int HELP = 72;
    public static final int IF = 73;
    public static final int IMPORT_TABLE = 74;
    public static final int INSERT = 75;
    public static final int ITERATE = 76;
    public static final int KILL = 77;
    public static final int LEAVE = 78;
    public static final int LOAD_DATA = 79;
    public static final int LOAD_INDEX_INTO_CACHE = 80;
    public static final int LOAD_XML = 81;
    public static final int LOCK_INSTANCE = 82;
    public static final int LOCK_TABLES = 83;
    public static final int LOOP = 84;
    public static final int OPTIMIZE_TABLE = 85;
    public static final int PREPARE = 86;
    public static final int PURGE_BINARY_LOG = 87;
    public static final int RELEASE_SAVEPOINT = 88;
    public static final int RENAME_TABLE = 89;
    public static final int RENAME_USER = 90;
    public static final int REPAIR_TABLE = 91;
    public static final int REPEAT = 92;
    public static final int REPLACE = 93;
    public static final int RESET = 94;
    public static final int RESET_MASTER = 95;
    public static final int RESET_SLAVE = 96;
    public static final int RESIGNAL = 97;
    public static final int RESTART = 98;
    public static final int RETURN = 99;
    public static final int REVOKE = 100;
    public static final int ROLLBACK = 101;
    public static final int ROLLBACK_TO_SAVEPOINT = 102;
    public static final int SAVEPOINT = 103;
    public static final int SELECT = 104;
    public static final int SET = 105;
    public static final int SET_DEFAULT_ROLE = 106;
    public static final int SET_PASSWORD = 107;
    public static final int SET_RESOURCE = 108;
    public static final int SET_ROLE = 109;
    public static final int SET_TRANSACTION = 110;
    public static final int SHOW = 111;
    public static final int SHUTDOWN = 112;
    public static final int SIGNAL = 113;
    public static final int START = 114;
    public static final int START_GROUP_REPL = 115;
    public static final int START_SLAVE = 116;
    public static final int STOP_GROUP_REPL = 117;
    public static final int STOP_SLAVE = 118;
    public static final int TRUNCATE_TABLE = 119;
    public static final int UNLOCK_INSTANCE = 120;
    public static final int UNLOCK_TABLES = 121;
    public static final int UPDATE = 122;
    public static final int USE = 123;
    public static final int WHILE = 124;
    public static final int WITH = 125;
    public static final int XA_COMMIT = 126;
    public static final int XA_END = 127;
    public static final int XA_PREPARE = 128;
    public static final int XA_RECOVER = 129;
    public static final int XA_ROLLBACK = 130;
    public static final int XA_START = 131;

    public static String getInfo(int type) {
        if (type < 1 || type > 132) {
            return "UNKNOWN";
        }
        return info[type];
    }

    private static String[] info = new String[256];

    static {
        info[1] = "ALTER_DATABASE";
        info[2] = "ALTER_EVENT";
        info[3] = "ALTER_FUNCTION";
        info[4] = "ALTER_INSTANCE";
        info[5] = "ALTER_LOG_FILE_GROUP";
        info[6] = "ALTER_PROCEDURE";
        info[7] = "ALTER_RESOURCE";
        info[8] = "ALTER_SERVER";
        info[9] = "ALTER_TABLE";
        info[10] = "ALTER_TABLESPACE";
        info[11] = "ALTER_USER";
        info[12] = "ALTER_VIEW";
        info[13] = "ANALYZE_TABLE";
        info[14] = "BEGIN";
        info[15] = "BEGIN_END";
        info[16] = "BINLOG";
        info[17] = "CACHE_INDEX";
        info[18] = "CALL";
        info[19] = "CASE";
        info[20] = "CHANGE_MASTER";
        info[21] = "CHANGE_REPL_FILTER";
        info[22] = "CHECK_TABLE";
        info[23] = "CHECKSUM_TABLE";
        info[24] = "COMMIT";
        info[25] = "CREATE_DATABASE";
        info[26] = "CREATE_EVENT";
        info[27] = "CREATE_FUNCTION";
        info[28] = "CREATE_INDEX";
        info[29] = "CREATE_LOG_FILE_GROUP";
        info[30] = "CREATE_PROCEDURE";
        info[31] = "CREATE_RESOURCE";
        info[32] = "CREATE_ROLE";
        info[33] = "CREATE_SERVER";
        info[34] = "CREATE_SPATIAL_REFERENCE_SYSTEM";
        info[35] = "CREATE_TABLE";
        info[36] = "CREATE_TABLESPACE";
        info[37] = "CREATE_TRIGGER";
        info[38] = "CREATE_USER";
        info[39] = "CREATE_VIEW";
        info[40] = "CURSOR_CLOSE";
        info[41] = "CURSOR_DECLARE";
        info[42] = "CURSOR_FETCH";
        info[43] = "CURSOR_OPEN";
        info[44] = "DEALLOCATE_PREPARE";
        info[45] = "DECLARE";
        info[46] = "DECLARE_CONDITION";
        info[47] = "DECLARE_HANDLER";
        info[48] = "DELETE";
        info[49] = "DESC";
        info[50] = "DO";
        info[51] = "DROP_DATABASE";
        info[52] = "DROP_EVENT";
        info[53] = "DROP_FUNCTION";
        info[54] = "DROP_INDEX";
        info[55] = "DROP_LOG_FILE_GROUP";
        info[56] = "DROP_PROCEDURE";
        info[57] = "DROP_RESOURCE";
        info[58] = "DROP_ROLE";
        info[59] = "DROP_SERVER";
        info[60] = "DROP_SPATIAL_REFERENCE_SYSTEM";
        info[61] = "DROP_TABLE";
        info[62] = "DROP_TABLESPACE";
        info[63] = "DROP_TRIGGER";
        info[64] = "DROP_USER";
        info[65] = "DROP_VIEW";
        info[66] = "EXECUTE";
        info[67] = "EXPLAIN";
        info[68] = "FLUSH";
        info[69] = "GET_DIAGNOSTICS";
        info[70] = "GRANT";
        info[71] = "HANDLER";
        info[72] = "HELP";
        info[73] = "IF";
        info[74] = "IMPORT_TABLE";
        info[75] = "INSERT";
        info[76] = "ITERATE";
        info[77] = "KILL";
        info[78] = "LEAVE";
        info[79] = "LOAD_DATA";
        info[80] = "LOAD_INDEX_INTO_CACHE";
        info[81] = "LOAD_XML";
        info[82] = "LOCK_INSTANCE";
        info[83] = "LOCK_TABLES";
        info[84] = "LOOP";
        info[85] = "OPTIMIZE_TABLE";
        info[86] = "PREPARE";
        info[87] = "PURGE_BINARY_LOG";
        info[88] = "RELEASE_SAVEPOINT";
        info[89] = "RENAME_TABLE";
        info[90] = "RENAME_USER";
        info[91] = "REPAIR_TABLE";
        info[92] = "REPEAT";
        info[93] = "REPLACE";
        info[94] = "RESET";
        info[95] = "RESET_MASTER";
        info[96] = "RESET_SLAVE";
        info[97] = "RESIGNAL";
        info[98] = "RESTART";
        info[99] = "RETURN";
        info[100] = "REVOKE";
        info[101] = "ROLLBACK";
        info[102] = "ROLLBACK_TO_SAVEPOINT";
        info[103] = "SAVEPOINT";
        info[104] = "SELECT";
        info[105] = "SET";
        info[106] = "SET_DEFAULT_ROLE";
        info[107] = "SET_PASSWORD";
        info[108] = "SET_RESOURCE";
        info[109] = "SET_ROLE";
        info[110] = "SET_TRANSACTION";
        info[111] = "SHOW";
        info[112] = "SHUTDOWN";
        info[113] = "SIGNAL";
        info[114] = "START";
        info[115] = "START_GROUP_REPL";
        info[116] = "START_SLAVE";
        info[117] = "STOP_GROUP_REPL";
        info[118] = "STOP_SLAVE";
        info[119] = "TRUNCATE_TABLE";
        info[120] = "UNLOCK_INSTANCE";
        info[121] = "UNLOCK_TABLES";
        info[122] = "UPDATE";
        info[123] = "USE";
        info[124] = "WHILE";
        info[125] = "WITH";
        info[126] = "XA_COMMIT";
        info[127] = "XA_END";
        info[128] = "XA_PREPARE";
        info[129] = "XA_RECOVER";
        info[130] = "XA_ROLLBACK";
        info[131] = "XA_START";
    }
}
